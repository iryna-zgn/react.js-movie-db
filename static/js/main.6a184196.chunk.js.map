{"version":3,"sources":["constants.js","components/Logo/index.js","paths.js","components/SocLinks/index.js","components/Header/index.js","ac/index.js","components/SearchForm/index.js","components/Stars/index.js","helpers.js","components/Movie/index.js","components/Preloader/index.js","components/LoadMore/index.js","components/MoviesList/index.js","components/Cast/index.js","components/Backdrops/index.js","components/MovieDetails/index.js","components/Footer/index.js","App.js","serviceWorker.js","reducer/movies.js","reducer/genres.js","reducer/index.js","store/index.js","middlewares/api.js","index.js"],"names":["modes","POPULAR","SEARCH","classes","IS_FOCUS","IS_FIXED","IS_SMALL","actions","LOAD_MOVIES","LOAD_MOVIE","LOAD_CREDITS","LOAD_GENRES","LOAD_NEXT_PAGE","SET_QUERY","START","SUCCESS","ERR","Logo","props","className","isSmall","concat","react_default","a","createElement","href","link","title","target","isTargetBlank","rel","text","BASE","KEY","URL_POPULAR","URL_SEARCH","URL_IMG","URL_GENRES","URL_MOVIE","RHO","BLOG","MOVIES","socLinks","name","url","isActive","renderItems","links","map","item","key","SocLinks","Header","getUrl","mode","query","page","loadMovies","arguments","length","undefined","type","payload","callAPI","SearchForm","state","isFocus","handleChange","e","_this","setQuery","value","handleSubmit","_this$props","lastQuery","preventDefault","addFocus","setState","removeFocus","loadPopular","renderSearchMsg","total_results","onClick","classNameInput","this","onSubmit","placeholder","onChange","onFocus","onBlur","Component","connect","movies","Stars","renderFilledStars","evaluation","stars","i","getStarCount","push","star","index","Math","round","count","objToMap","obj","DataRecord","Map","Object","keys","reduce","acc","set","getImg","img","separateByCommas","arr","el","getYear","date","slice","formatNumber","number","symbol","toString","replace","formatTime","floor","Movie","getGenres","ids","genres","currentGenres","Set","forEach","id","genre","add","toConsumableArray","renderGenres","movie","react_router_dom","to","style","backgroundImage","poster_path","src","alt","genre_ids","release_date","Stars_Stars","vote_average","vote_count","WebkitBoxOrient","overview","Preloader","isFixed","LoadMore","handleClickMore","loadNextPage","loadingMore","MoviesList","react_transition_group","classNames","timeout","appear","enter","exit","Movie_Movie","renderLoadMore","_this$props2","pages","components_LoadMore","components_SearchForm","loadGenres","results","total_pages","renderCast","cast","cast_id","profile_path","character","Cast","renderBackdrops","images","backdrops","file_path","Backdrops","MovieDetails","getDetails","data","val","runtime","original_language","budget","getCrew","m","job","has","get","entries","getDataByName","renderTableRows","renderHomeLink","credits","production_countries","production_companies","crew","homepage","loadMovie","loadCredits","Footer","Date","getFullYear","App","getMovieDetails","_ref","match","params","components_MovieDetails","renderPreloader","loading","react_router","exact","path","component","render","Boolean","window","location","hostname","ReducerState","Record","GenreRecord","combineReducers","action","response","enhancer","applyMiddleware","store","next","rest","objectWithoutProperties","objectSpread","setTimeout","fetch","then","json","catch","err","createStore","reducer","ReactDOM","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6a184196.chunk.js","sourcesContent":["export const modes = {\n    POPULAR: 'popular',\n    SEARCH: 'search'\n}\n\nexport const classes = {\n    IS_FOCUS: 'is-focus',\n    IS_FIXED: 'is-fixed',\n    IS_SMALL: 'is-small'\n}\n\nexport const actions = {\n    LOAD_MOVIES: 'LOAD_MOVIES',\n    LOAD_MOVIE: 'LOAD_MOVIE',\n    LOAD_CREDITS: 'LOAD_CREDITS',\n    LOAD_GENRES: 'LOAD_GENRES',\n    LOAD_NEXT_PAGE: 'LOAD_NEXT_PAGE',\n    SET_QUERY: 'SET_QUERY',\n    START: 'START',\n    SUCCESS: 'SUCCESS',\n    ERR: 'ERR'\n}\n","import React from 'react'\nimport { classes } from './../../constants'\n\nexport default function Logo(props) {\n    let className= 'logo'\n    if (props.isSmall) className += ` ${classes.IS_SMALL}`\n\n  return (\n      <div className={ className }>\n          <a\n              href={ props.link || '#'}\n              title={ props.title }\n              target={ props.isTargetBlank ? '_blank' :  '_self'}\n              className='logo__link'\n              rel='noopener noreferrer'>\n              <span className='logo__main'>rho</span>\n              <span className='logo__text'>{ props.text }</span>\n          </a>\n  </div>\n  )\n}\n","const BASE = 'https://api.themoviedb.org'\nexport const KEY = 'ac710db081029f2383b7c329b25a753a'\nexport const URL_POPULAR = `${BASE}/3/movie/popular?api_key=${KEY}`\nexport const URL_SEARCH = `${BASE}/3/search/movie?api_key=${KEY}`\nexport const URL_IMG = `https://image.tmdb.org/t/p/w500`\nexport const URL_GENRES = `${BASE}/3/genre/list?api_key=${KEY}`\nexport const URL_MOVIE = `${BASE}/3/movie/`\n\nexport const RHO = {\n    BLOG: 'https://iryna-zgn.github.io/vue.js-blog',\n    MOVIES: 'https://iryna-zgn.github.io/react.js-movie-db'\n}\n\nexport const socLinks = [\n    {\n        name: 'github',\n        url: 'https://github.com/iryna-zgn',\n        isActive: true\n    },\n    {\n        name: 'instagram',\n        url: '#',\n        isActive: false\n    },\n    {\n        name: 'facebook',\n        url: 'https://www.facebook.com/ira.dmytruk',\n        isActive: true\n    }\n]\n","import React from 'react'\nimport { socLinks as links } from './../../paths'\n\nconst renderItems = () => {\n  return links.map(item => {\n    if (item.isActive) {\n      return <li\n          key={ item.name }\n          className='soc-links__item'>\n          <a\n              href={ item.url }\n              title={ item.name }\n              className='soc-links__link'\n              target='_blank'\n              rel='noopener noreferrer'>\n            <span className={ `soc-links__icon icon-${item.name}` }/>\n          </a>\n      </li>\n    } else {\n      return null\n    }\n  })\n}\n\nexport default function SocLinks() {\n  return (\n      <ul className='soc-links'>{ renderItems() }</ul>\n  )\n}\n","import React from 'react'\nimport Logo from './../Logo'\nimport SocLinks from './../../components/SocLinks'\nimport { RHO } from './../../paths'\n\nexport default function Header() {\n    return (\n        <header className='header'>\n            <Logo\n                text='movies'\n                link={ RHO.MOVIES} />\n            <div className='header__inline'>\n                <SocLinks/>\n                <Logo\n                    link={ RHO.BLOG }\n                    text='blog'\n                    isSmall\n                    isTargetBlank\n                    title='rho blog'/>\n            </div>\n        </header>\n    )\n}\n","import { actions } from './../constants'\nimport { URL_POPULAR, URL_GENRES, URL_SEARCH, URL_MOVIE, KEY } from './../paths'\nimport { modes } from './../constants'\n\nfunction getUrl(mode, query, page) {\n    return mode === modes.POPULAR\n        ? `${URL_POPULAR}&page=${page}`\n        : `${URL_SEARCH}&query=${query}&page=${page}`\n}\n\nexport function loadMovies(mode = modes.POPULAR, query = '', page = 1) {\n    return {\n        type: actions.LOAD_MOVIES,\n        payload: { mode, query },\n        callAPI: getUrl(mode, query, page)\n    }\n}\n\nexport function loadMovie(id) {\n    return {\n        type: actions.LOAD_MOVIE,\n        callAPI: `${URL_MOVIE}${id}?api_key=${KEY}&append_to_response=images`\n    }\n}\n\nexport function loadCredits(id) {\n    return {\n        type: actions.LOAD_CREDITS,\n        callAPI: `${URL_MOVIE}${id}/credits?api_key=${KEY}`\n    }\n}\n\nexport function loadNextPage(mode = modes.POPULAR, query = '', page = 1) {\n    return {\n        type: actions.LOAD_NEXT_PAGE,\n        payload: { page },\n        callAPI: getUrl(mode, query, page)\n    }\n}\n\nexport function loadGenres() {\n    return {\n        type: actions.LOAD_GENRES,\n        callAPI: URL_GENRES\n    }\n}\n\nexport function setQuery(query) {\n    return {\n        type: actions.SET_QUERY,\n        payload: { query }\n    }\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { loadMovies, setQuery } from './../../ac'\nimport { classes, modes } from './../../constants'\n\nclass SearchForm extends Component {\n    static propTypes = {\n        query: PropTypes.string,\n        lastQuery: PropTypes.string,\n        setQuery: PropTypes.func,\n        loadMovies: PropTypes.func\n    }\n\n    state = {\n        isFocus: false\n    }\n\n    handleChange = e => this.props.setQuery(e.target.value)\n\n    handleSubmit = e => {\n        const { query, lastQuery } = this.props\n\n        e.preventDefault()\n        if (query && query !== lastQuery) this.props.loadMovies(modes.SEARCH, query)\n    }\n\n    addFocus = () => {\n        this.setState({\n            isFocus: true\n        })\n    }\n\n    removeFocus = () => {\n        this.setState({\n            isFocus: false\n        })\n    }\n\n    loadPopular = () => {\n        this.props.loadMovies()\n    }\n\n    renderSearchMsg = () => {\n        if (!this.props.total_results) {\n            return <div>\n                <div className='search__msg'>No results :(</div>\n                <div\n                    onClick={ this.loadPopular }\n                    className='search__link'>\n                    Popular movies\n                </div>\n            </div>\n        }\n    }\n\n    render() {\n        let classNameInput = 'search__field'\n        if (this.state.isFocus) classNameInput += ` ${classes.IS_FOCUS}`\n\n        return (\n            <div className='search'>\n                <form\n                    className='search__form'\n                    onSubmit={ this.handleSubmit }>\n                    <div\n                        className={ classNameInput }>\n                        <input\n                            value={ this.props.query }\n                            placeholder='Search for a movie'\n                            type='text'\n                            onChange={ this.handleChange }\n                            onFocus={ this.addFocus }\n                            onBlur={ this.removeFocus }/>\n                    </div>\n                    <button className='search__btn icon-search'/>\n                </form>\n                { this.renderSearchMsg() }\n            </div>\n        )\n    }\n}\n\nexport default connect(state => ({\n    query: state.movies.query,\n    lastQuery: state.movies.lastQuery,\n    total_results: state.movies.total_results\n}), {\n    loadMovies,\n    setQuery\n})(SearchForm)\n","import React, { Component } from 'react'\n\nexport default class Stars extends Component {\n    render() {\n        return (\n            <div className='evaluation'>\n                <div className='evaluation__stars'>\n                    { this.renderFilledStars() }\n                </div>\n                <span>{ this.props.count }</span>\n            </div>\n        )\n    }\n\n    renderFilledStars = () => {\n        const { evaluation } = this.props\n        const stars = []\n\n        for (let i = 0; i < this.getStarCount(evaluation); i++) {\n            stars.push(<span className='icon-star-filled'></span>)\n        }\n\n        for (let i = 0; i < 5 - this.getStarCount(evaluation); i++) {\n            stars.push(<span className='icon-star'></span>)\n        }\n\n        return stars.map((star, index) => {\n            return <div key = { index } className='evaluation__stars-item'>{ star }</div>\n        })\n    }\n\n    getStarCount = evaluation => Math.round(evaluation / 2)\n}\n","import { Map } from 'immutable'\nimport { URL_IMG } from './paths'\n\nexport function objToMap(obj, DataRecord = Map) {\n    return Object.keys(obj).reduce((acc, key) => acc.set(key, obj[key]), new DataRecord())\n}\n\nexport function getImg(img) {\n    return img ? `${URL_IMG}${img}` : 'static/images/rho_light.jpg'\n}\n\nexport function separateByCommas(arr) {\n    if (arr) return arr.reduce((acc, el, index) => acc + (index ? ', ' : '') + el.name , '')\n}\n\nexport function getYear(date){\n    if (date) return date.slice(0, 4)\n}\n\nexport function formatNumber(number, symbol='') {\n    if (number) return symbol + number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n}\n\nexport function formatTime(number) {\n    if (number) return `${Math.floor(number / 60)} h ${number % 60} min`\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Stars from './../../components/Stars'\nimport { Link } from 'react-router-dom'\nimport { getImg, separateByCommas, getYear } from '../../helpers'\n\nexport default class Movie extends Component {\n    static propTypes = {\n        movie: PropTypes.shape({\n            poster_path: PropTypes.string,\n            title: PropTypes.string,\n            genre_ids: PropTypes.array,\n            release_date: PropTypes.string,\n            overview: PropTypes.string\n        }),\n        genres: PropTypes.array\n    }\n\n    render() {\n        const { movie } = this.props\n\n        return (\n            <div className='movie'>\n                <Link to={`/movie-${movie.id}`}\n                    className='movie__img'\n                    style={{ backgroundImage: `url(${getImg(movie.poster_path)})` }}>\n                    <img src='static/images/rho_light.jpg' alt='' className='u-dummy'/>\n                </Link>\n                <div>\n                    <Link to={`/movie-${movie.id}`}\n                          className='movie__title t2'>\n                        { movie.title }\n                    </Link>\n                    <div className='movie__prop'>\n                        { this.renderGenres(movie.genre_ids) }\n                    </div>\n                    <div className='movie__prop'>\n                        { getYear(movie.release_date) }\n                    </div>\n                    <Stars\n                        evaluation={ movie.vote_average }\n                        count={ movie.vote_count }/>\n                    <div\n                        className='movie__desc'\n                        style={{ WebkitBoxOrient: 'vertical' }}>\n                        { movie.overview }\n                    </div>\n                    <Link to={`/movie-${movie.id}`}\n                          className='movie__link'>\n                        Read more\n                    </Link>\n                </div>\n            </div>\n        )\n    }\n\n    getGenres = ids => {\n        const { genres } = this.props\n        const currentGenres = new Set()\n\n        ids.forEach(id => {\n            genres.forEach(genre => {\n                if (genre.id === id) {\n                    currentGenres.add(genre)\n                }\n            })\n        })\n\n        return [...currentGenres]\n    }\n\n    renderGenres = ids => separateByCommas(this.getGenres(ids))\n}\n","import React from 'react'\nimport { classes } from './../../constants'\n\nexport default function Preloader(props) {\n  let className = 'preloader'\n  if (props.isFixed) className += ` ${classes.IS_FIXED}`\n\n  return (\n      <div className={ className }>\n        <div className='preloader__inner'/>\n      </div>\n  )\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Preloader from './../../components/Preloader'\nimport { connect } from 'react-redux'\nimport { loadNextPage } from './../../ac'\n\n\nclass LoadMore extends Component {\n    static propTypes = {\n        page: PropTypes.number.isRequired,\n        loadNextPage: PropTypes.func.isRequired,\n        loadingMore: PropTypes.bool,\n        mode: PropTypes.string,\n        query: PropTypes.string\n    }\n\n    render() {\n        return (\n            <div className='load-more'>\n                {\n                    this.props.loadingMore\n                        ? <div\n                        className='load-more__preloader'>\n                        <Preloader />\n                    </div>\n                        : <div\n                        onClick={ this.handleClickMore }\n                        className='load-more__link'>\n                        Load more\n                    </div>\n                }\n            </div>\n        )\n    }\n\n    handleClickMore = () => {\n        const { page, mode, query } = this.props\n\n        this.props.loadNextPage(mode, query, page + 1)\n    }\n}\n\nexport default connect(state => ({\n    page: state.movies.page,\n    loadingMore: state.movies.loadingMore,\n    mode: state.movies.mode,\n    query: state.movies.query\n}), {\n    loadNextPage\n})(LoadMore)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport SearchForm from './../SearchForm'\nimport Movie from './../Movie'\nimport LoadMore from './../LoadMore'\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\nimport { connect } from 'react-redux'\nimport { loadMovies, loadGenres } from './../../ac'\n\n\nclass MoviesList extends Component {\n    static propTypes = {\n        movies: PropTypes.array,\n        genres: PropTypes.array,\n        pages: PropTypes.number,\n        page: PropTypes.number,\n        loadMovies: PropTypes.func,\n        loadGenres: PropTypes.func,\n        loadingMore: PropTypes.bool,\n        mode: PropTypes.string,\n        query: PropTypes.string\n    }\n\n    render() {\n        return (\n            <div>\n                <SearchForm/>\n                <div className='movies-list'>\n                    <TransitionGroup>\n                        { this.renderItems() }\n                    </TransitionGroup>\n                </div>\n                { this.renderLoadMore() }\n            </div>\n        )\n    }\n\n    componentDidMount() {\n        this.props.loadMovies()\n        this.props.loadGenres()\n    }\n\n    renderItems = () => {\n        const { movies, genres } = this.props\n\n        return movies.map(movie => {\n            return <CSSTransition\n                key={ movie.id }\n                classNames='fade'\n                timeout={{ appear: 300, enter: 300, exit: 300 }}\n                appear>\n                <div className='movies-list__item'>\n                    <Movie\n                        movie={ movie }\n                        genres={ genres }/>\n                </div>\n            </CSSTransition>\n        })\n    }\n\n    renderLoadMore = () => {\n        const { pages, page } = this.props\n\n        if (pages > 1 && page !== pages ) return <LoadMore/>\n    }\n}\n\nexport default connect(state => ({\n    movies: state.movies.results,\n    genres: state.genres.genres,\n    pages: state.movies.total_pages,\n    page: state.movies.page,\n    loadingMore: state.movies.loadingMore,\n    mode: state.movies.mode,\n    query: state.movies.query\n}), {\n    loadMovies,\n    loadGenres\n})(MoviesList)\n","import React from 'react'\nimport { getImg } from './../../helpers'\n\nconst renderCast = cast => {\n    if (!cast) return null\n\n    return cast.slice(0, 6).map(el => {\n        return <div\n            key={ el.cast_id }\n            className='cast__item'>\n            <div\n                className='cast__img'\n                style={{ backgroundImage: `url(${getImg(el.profile_path)})` }}>\n                <img src='static/images/rho_light.jpg' alt='' className='u-dummy'/>\n            </div>\n            <div className='t3'>{ el.name }</div>\n            <div className='cast__desc'>{ el.character }</div>\n        </div>\n    })\n}\n\nexport default function Cast(props) {\n    return (\n        <div className='cast'>\n            <h2 className='t2'>Cast</h2>\n            <div className='cast__list'>\n                { renderCast(props.cast) }\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { getImg } from './../../helpers'\n\nconst renderBackdrops = images => {\n    if (!images) return null\n\n    return images.backdrops.map(el => {\n        return <img key={el.file_path} src={ getImg(el.file_path) } alt=''/>\n    })\n}\n\nexport default function Backdrops(props) {\n    return (\n        <div className='backdrops'>\n            <h2 className='t2'>Backdrops</h2>\n            <div className='backdrops__gallery u-scrollbar-x'>\n                { renderBackdrops(props.images) }\n            </div>\n        </div>\n    )\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { loadMovie, loadCredits } from './../../ac'\nimport { getImg, separateByCommas, getYear, formatNumber, formatTime  } from '../../helpers'\nimport Stars from './../../components/Stars'\nimport Cast from './../../components/Cast'\nimport Backdrops from './../../components/Backdrops'\n\nclass MovieDetails extends Component {\n    static propTypes = {\n        id: PropTypes.string,\n        loadMovie: PropTypes.func,\n        loadCredits: PropTypes.func,\n        movie: PropTypes.object\n    }\n\n    render() {\n        const { movie, credits } = this.props\n\n        return <div className='movie-details'>\n                    <div className='movie-details__parts'>\n                        <div className='movie-details__const'>\n                        <img src={ getImg(movie.poster_path) } alt=''/>\n                    </div>\n                        <div className='movie-details__var'>\n                        <h1>{movie.title }</h1>\n                        <Stars\n                            evaluation={ movie.vote_average }\n                            count={ movie.vote_count }/>\n                        <table className='movie-details__props'>\n                            <tbody>\n                                { this.renderTableRows(this.getDetails(movie)) }\n                                { this.renderTableRows(this.getDataByName(movie.production_countries, 'Country')) }\n                                { this.renderTableRows(this.getDataByName(movie.production_companies, 'Production')) }\n                                { this.renderTableRows(this.getCrew(credits.crew)) }\n                            </tbody>\n                        </table>\n                    </div>\n                    </div>\n                    <div className='movie-details__desc'>\n                        <p>{ movie.overview }</p>\n                    </div>\n                    { this.renderHomeLink(movie.homepage) }\n                    <Cast cast={ credits.cast }/>\n                    <Backdrops images={ movie.images }/>\n                </div>\n    }\n\n    componentDidMount() {\n        this.props.loadMovie(this.props.id)\n        this.props.loadCredits(this.props.id)\n    }\n\n    getDetails = data => {\n        return data = [\n            {\n                key: 'Genre',\n                val: separateByCommas(data.genres)\n            },\n            {\n                key: 'Runtime',\n                val: formatTime(data.runtime)\n            },\n            {\n                key: 'Original language',\n                val: data.original_language\n            },\n            {\n                key: 'Release year',\n                val: getYear(data.release_date)\n            },\n            {\n                key: 'Budget',\n                val: formatNumber(data.budget, '$')\n            },\n        ]\n\n    }\n\n    getCrew = (data=[]) => {\n        const jobs = [\n            'Director',\n            'Producer',\n            'Screenplay',\n            'Writer',\n            'Music',\n            'Original Music Composer'\n        ]\n        const m = new Map()\n\n        jobs.forEach(job => {\n            data.forEach(el => {\n                if (el.job === job) {\n                    m.set(el.job, m.has(el.job) ? `${m.get(el.job)}, ${el.name}` : el.name)\n                }\n            })\n        })\n\n        return [...m.entries()].map(el => {\n            return {\n                key: el[0],\n                val: el[1]\n            }\n        })\n    }\n\n    getDataByName = (data=[], name='') => {\n        return [{\n            key: name,\n            val: separateByCommas(data)\n        }]\n    }\n\n    renderTableRows = data => {\n        return data.map((el, index) => {\n            if (!el.val) return null\n\n            return <tr key={ el.key + index }>\n                <td>{ el.key }</td>\n                <td>{ el.val }</td>\n            </tr>\n        })\n\n    }\n\n    renderHomeLink = (url='') => {\n\n        return <a\n            href={ url }\n            className='movie-details__link'\n            target='_blank'\n            rel='noopener noreferrer'>\n            homepage\n        </a>\n    }\n}\n\nexport default connect(state => ({\n    movie: state.movies.movie,\n    credits: state.movies.credits\n}), {\n    loadMovie,\n    loadCredits\n})(MovieDetails)\n","import React from 'react'\n\nexport default function Footer() {\n    return (\n        <footer className='footer'>\n            <div className='footer__copyright'>\n                © { (new Date()).getFullYear() } Rho\n            </div>\n        </footer>\n    )\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Header from './components/Header'\nimport MoviesList from './components/MoviesList'\nimport MovieDetails from './components/MovieDetails'\nimport Footer from './components/Footer'\nimport Preloader from './components/Preloader'\nimport { connect } from 'react-redux'\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\n\nclass App extends Component {\n    static propTypes = {\n        loading: PropTypes.bool\n    }\n\n    render() {\n        return (\n            <Router>\n                <div className='container'>\n                    <div>\n                        <Header/>\n                        <Switch>\n                            <Route exact path='/' component={ MoviesList }/>\n                            <Route path='/movie-:id' render={ this.getMovieDetails }/>\n                        </Switch>\n                    </div>\n                    <Footer/>\n                    { this.renderPreloader() }\n                </div>\n            </Router>\n        )\n    }\n\n    getMovieDetails = ({ match }) => {\n        const { id } = match.params\n        return <MovieDetails  id={ id }/>\n    }\n\n    renderPreloader = () => {\n        if (this.props.loading) return <Preloader isFixed/>\n    }\n}\n\nexport default connect(state => ({\n    loading: state.movies.loading\n}))(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { actions } from './../constants'\n// eslint-disable-next-line\nimport { Map, Record } from 'immutable'\nimport { objToMap } from './../helpers'\nimport { modes } from './../constants'\n\nconst ReducerState = Record({\n    results: [],\n    total_pages: 1,\n    page: 1,\n    total_results: 0,\n    loading: false,\n    loadingMore: false,\n    mode: modes.POPULAR,\n    query: '',\n    lastQuery: '',\n    movie: {},\n    credits: {}\n})\n\nexport default (state = new ReducerState(), action) => {\n    const { type, payload, response } = action\n\n    switch (type) {\n        case actions.LOAD_MOVIES + actions.START:\n            return state.set('loading', true)\n\n        case actions.LOAD_MOVIES + actions.SUCCESS:\n            return objToMap(response, ReducerState)\n                    .set('query', payload.query)\n                    .set('lastQuery', payload.query)\n                    .set('mode', payload.mode)\n                    .set('loading', false)\n\n        case actions.LOAD_NEXT_PAGE + actions.START:\n            return state.set('loadingMore', true)\n\n        case actions.LOAD_NEXT_PAGE + actions.SUCCESS:\n            return state\n                    .set('page', payload.page)\n                    .set('results', [...state.results, ...response.results])\n                    .set('loadingMore', false)\n\n        case actions.SET_QUERY:\n            return state.set('query', payload.query)\n\n        case actions.LOAD_MOVIE + actions.START:\n            return state.set('loading', true)\n\n        case actions.LOAD_MOVIE + actions.SUCCESS:\n            return state\n                    .set('movie', response)\n                    .set('loading', false)\n\n        case actions.LOAD_CREDITS + actions.START:\n            return state.set('loading', true)\n\n        case actions.LOAD_CREDITS + actions.SUCCESS:\n            return state\n                    .set('credits', response)\n                    .set('loading', false)\n\n        default:\n            return state\n    }\n}\n","import { actions } from './../constants'\n// eslint-disable-next-line\nimport { Map, Record } from 'immutable'\nimport { objToMap } from './../helpers'\n\nconst GenreRecord = Record({\n    genres: []\n})\n\nexport default (state = new GenreRecord(), action) => {\n    const { type, response } = action\n\n    switch (type) {\n        case actions.LOAD_GENRES + actions.SUCCESS:\n            return objToMap(response, GenreRecord)\n\n        default:\n            return state\n    }\n}\n","import { combineReducers } from 'redux'\nimport movies from './movies'\nimport genres from './genres'\n\nexport default combineReducers({\n    movies,\n    genres\n})\n","import { createStore, applyMiddleware } from 'redux'\nimport reducer from '../reducer'\nimport api from '../middlewares/api'\n\nconst enhancer = applyMiddleware(api)\n\nconst store = createStore(reducer, {}, enhancer)\n\nwindow.store = store\n\nexport default store\n","import { actions } from './../constants'\n\nexport default store => next => action => {\n    const { callAPI, type, ...rest } = action\n    if (!callAPI) return next(action)\n\n    next({\n        ...rest,\n        type: type + actions.START\n    })\n\n    setTimeout(() => {\n        fetch(callAPI)\n            .then(response => response.json())\n            .then(response => next({...rest, type: type + actions.SUCCESS, response}))\n            .catch(err => next({...rest, type: type + actions.ERR, err}))\n    }, 700)\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/styles.sass'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n// eslint-disable-next-line\nimport store from './store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}