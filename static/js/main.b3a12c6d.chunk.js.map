{"version":3,"sources":["constants.js","paths.js","ac/index.js","components/SearchForm/index.js","components/Logo/index.js","components/Header/index.js","components/Movie/index.js","components/Preloader/index.js","components/LoadMore/index.js","components/MoviesList/index.js","components/SocLinks/index.js","components/Footer/index.js","App.js","serviceWorker.js","helpers.js","reducer/movies.js","reducer/genres.js","reducer/index.js","store/index.js","middlewares/api.js","index.js"],"names":["modes","POPULAR","SEARCH","classes","IS_FOCUS","IS_FIXED","IS_SMALL","actions","LOAD_MOVIES","LOAD_GENRES","LOAD_NEXT_PAGE","SET_QUERY","START","SUCCESS","ERR","KEY","BASE","URL_POPULAR","concat","URL_SEARCH","URL_IMG","URL_GENRES","getUrl","page","mode","query","loadMovies","arguments","length","undefined","type","payload","callAPI","SearchForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","setQuery","target","value","handleSubmit","preventDefault","addFocus","setState","isFocus","removeFocus","loadPopular","renderSearchMsg","total_results","react_default","a","createElement","className","onClick","state","classNameInput","onSubmit","onChange","onFocus","onBlur","Component","connect","movies","logo","isSmall","href","link","title","isTargetBlank","rel","text","header","components_SearchForm","Movie","getYear","date","slice","getImg","img","getGenres","ids","genres","currentGenres","Set","forEach","id","genre","add","toConsumableArray","renderGenres","map","index","key","name","toLowerCase","movie","style","backgroundImage","poster_path","src","alt","genre_ids","release_date","overview","preloader","isFixed","LoadMore","handleClickMore","_this$props","loadNextPage","loadingMore","MoviesList","renderItems","react_transition_group","classNames","timeout","appear","enter","exit","Movie_Movie","renderLoadMore","_this$props2","pages","components_LoadMore","loadGenres","results","total_pages","items","url","isActive","item","socLinks","footer","Date","getFullYear","App","renderPreloader","loading","components_MoviesList","Boolean","window","location","hostname","match","objToMap","obj","DataRecord","Map","keys","reduce","acc","set","ReducerState","Record","GenreRecord","combineReducers","action","response","enhancer","applyMiddleware","store","next","rest","objectWithoutProperties","objectSpread","setTimeout","fetch","then","json","catch","err","createStore","reducer","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b3a12c6d.chunk.js","sourcesContent":["export const modes = {\n    POPULAR: 'popular',\n    SEARCH: 'search'\n}\n\nexport const classes = {\n    IS_FOCUS: 'is-focus',\n    IS_FIXED: 'is-fixed',\n    IS_SMALL: 'is-small'\n}\n\nexport const actions = {\n    LOAD_MOVIES: 'LOAD_MOVIES',\n    LOAD_GENRES: 'LOAD_GENRES',\n    LOAD_NEXT_PAGE: 'LOAD_NEXT_PAGE',\n    SET_QUERY: 'SET_QUERY',\n    START: 'START',\n    SUCCESS: 'SUCCESS',\n    ERR: 'ERR'\n}\n","const KEY = 'ac710db081029f2383b7c329b25a753a'\nconst BASE = 'https://api.themoviedb.org'\nexport const URL_POPULAR = `${BASE}/3/movie/popular?api_key=${KEY}`\nexport const URL_SEARCH = `${BASE}/3/search/movie?api_key=${KEY}`\nexport const URL_IMG = `https://image.tmdb.org/t/p/w500/`\nexport const URL_GENRES = `${BASE}/3/genre/list?api_key=${KEY}`\n","import { actions } from './../constants'\nimport { URL_POPULAR, URL_GENRES, URL_SEARCH } from './../paths'\nimport { modes } from './../constants'\n\nfunction getUrl(page, mode, query) {\n    return mode === modes.POPULAR\n        ? `${URL_POPULAR}&page=${page}`\n        : `${URL_SEARCH}&query=${query}&page=${page}`\n}\n\nexport function loadMovies(page = 1, mode = modes.POPULAR, query = '') {\n    return {\n        type: actions.LOAD_MOVIES,\n        payload: { page, mode, query },\n        callAPI: getUrl(page, mode, query)\n    }\n}\n\nexport function loadNextPage(page = 1, mode = modes.POPULAR, query = '') {\n    return {\n        type: actions.LOAD_NEXT_PAGE,\n        payload: { page, mode, query },\n        callAPI: getUrl(page, mode, query)\n    }\n}\n\nexport function loadGenres() {\n    return {\n        type: actions.LOAD_GENRES,\n        callAPI: URL_GENRES\n    }\n}\n\nexport function setQuery(query) {\n    return {\n        type: actions.SET_QUERY,\n        payload: { query }\n    }\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { loadMovies, setQuery } from './../../ac'\nimport { classes, modes } from './../../constants'\n\nclass SearchForm extends Component {\n    static propTypes = {\n        query: PropTypes.string,\n        setQuery: PropTypes.func,\n        loadMovies: PropTypes.func\n    }\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            isFocus: false\n        }\n    }\n\n    handleChange = e => this.props.setQuery(e.target.value)\n\n    handleSubmit = e => {\n        const { query } = this.props\n\n        e.preventDefault()\n        if (query) this.props.loadMovies(query, modes.SEARCH, query)\n    }\n\n    addFocus = () => {\n        this.setState({\n            isFocus: true\n        })\n    }\n\n    removeFocus = () => {\n        this.setState({\n            isFocus: false\n        })\n    }\n\n    loadPopular = () => {\n        this.props.loadMovies()\n    }\n\n    renderSearchMsg = () => {\n        if (!this.props.total_results) {\n            return <div>\n                <div className='search__msg'>No results :(</div>\n                <div\n                    onClick={ this.loadPopular }\n                    className='search__link'>\n                    Popular movies\n                </div>\n            </div>\n        }\n    }\n\n    render() {\n        let classNameInput = 'search__field'\n        if (this.state.isFocus) classNameInput += ` ${classes.IS_FOCUS}`\n\n        return (\n            <div className='search'>\n                <form\n                    className='search__form'\n                    onSubmit={ this.handleSubmit }>\n                    <div\n                        className={ classNameInput }>\n                        <input\n                            value={ this.props.query }\n                            type='text'\n                            onChange={ this.handleChange }\n                            onFocus={ this.addFocus }\n                            onBlur={ this.removeFocus }/>\n                    </div>\n                    <button className='search__btn icon-search'/>\n                </form>\n                { this.renderSearchMsg() }\n            </div>\n        )\n    }\n}\n\nexport default connect(state => ({\n    query: state.movies.query,\n    total_results: state.movies.total_results\n}), {\n    loadMovies,\n    setQuery\n})(SearchForm)\n","import React from 'react'\nimport { classes } from './../../constants'\n\nexport default function logo(props) {\n    let className= 'logo'\n    if (props.isSmall) className += ` ${classes.IS_SMALL}`\n\n  return (\n      <div className={ className }>\n          <a\n              href={ props.link || '#'}\n              title={ props.title }\n              target={ props.isTargetBlank ? '_blank' :  '_self'}\n              className='logo__link'\n              rel='noopener noreferrer'>\n              <span className='logo__main'>rho</span>\n              <span className='logo__text'>{ props.text }</span>\n          </a>\n  </div>\n  )\n}\n","import React from 'react'\nimport SearchForm from './../SearchForm'\nimport Logo from './../Logo'\n\nexport default function header() {\n    return (\n        <header className='header'>\n            <Logo\n                text='movies'\n                link='/' />\n            <SearchForm/>\n        </header>\n    )\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { URL_IMG } from '../../paths'\n\nexport default class Movie extends Component {\n    static propTypes = {\n        movie: PropTypes.shape({\n            poster_path: PropTypes.string,\n            title: PropTypes.string,\n            genre_ids: PropTypes.array.isRequired,\n            release_date: PropTypes.string.isRequired,\n            overview: PropTypes.string\n        }),\n        genres: PropTypes.array.isRequired\n    }\n\n    render() {\n        const { movie } = this.props\n\n        return (\n            <div className='movie'>\n                <div\n                    className='movie__img'\n                    style={{ backgroundImage: `url(${this.getImg(movie.poster_path)})` }}>\n                    <img src='static/images/dummy_420x630.jpg' alt='' className='u-dummy'/>\n                </div>\n                <div>\n                    <h2 className='movie__title'>{ movie.title }</h2>\n                    <div className='movie__prop'>{ this.renderGenres(movie.genre_ids) }</div>\n                    <div className='movie__prop'>{ this.getYear(movie.release_date) }</div>\n                    <div className='movie__desc'>{ movie.overview }</div>\n                    <div className='movie__link'>Read more</div>\n                </div>\n            </div>\n        )\n    }\n\n    getYear = date => date.slice(0, 4)\n\n    getImg = img => img ? `${URL_IMG}${img}` : 'static/images/rho_light.jpg'\n\n    getGenres = ids => {\n        const { genres } = this.props\n        const currentGenres = new Set()\n\n        ids.forEach(id => {\n            genres.forEach(genre => {\n                if (genre.id === id) {\n                    currentGenres.add(genre)\n                }\n            })\n        })\n\n        return [...currentGenres]\n    }\n\n    renderGenres = ids => {\n        return this.getGenres(ids).map((genre, index) => {\n            return <span key={ genre.id }>\n                        { (index ? `, ${genre.name.toLowerCase()}` : genre.name) }\n                    </span>\n        })\n    }\n}\n","import React from 'react'\nimport { classes } from './../../constants'\n\nexport default function preloader(props) {\n  let className = 'preloader'\n  if (props.isFixed) className += ` ${classes.IS_FIXED}`\n\n  return (\n      <div className={ className }>\n        <div className='preloader__inner'/>\n      </div>\n  )\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Preloader from './../../components/Preloader'\nimport { connect } from 'react-redux'\nimport { loadNextPage } from './../../ac'\n\n\nclass LoadMore extends Component {\n    static propTypes = {\n        page: PropTypes.number.isRequired,\n        loadNextPage: PropTypes.func.isRequired,\n        loadingMore: PropTypes.bool,\n        mode: PropTypes.string,\n        query: PropTypes.string\n    }\n\n    render() {\n        return (\n            <div className='load-more'>\n                {\n                    this.props.loadingMore\n                        ? <div\n                        className='load-more__preloader'>\n                        <Preloader />\n                    </div>\n                        : <div\n                        onClick={ this.handleClickMore }\n                        className='load-more__link'>\n                        Load more\n                    </div>\n                }\n            </div>\n        )\n    }\n\n    handleClickMore = () => {\n        const { page, mode, query } = this.props\n\n        this.props.loadNextPage(page + 1, mode, query)\n    }\n}\n\nexport default connect(state => ({\n    page: state.movies.page,\n    loadingMore: state.movies.loadingMore,\n    mode: state.movies.mode,\n    query: state.movies.query\n}), {\n    loadNextPage\n})(LoadMore)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Movie from './../Movie'\nimport LoadMore from './../LoadMore'\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\nimport { connect } from 'react-redux'\nimport { loadMovies, loadGenres } from './../../ac'\n\n\nclass MoviesList extends Component {\n    static propTypes = {\n        movies: PropTypes.array.isRequired,\n        genres: PropTypes.array.isRequired,\n        pages: PropTypes.number.isRequired,\n        page: PropTypes.number.isRequired,\n        loadMovies: PropTypes.func.isRequired,\n        loadGenres: PropTypes.func.isRequired,\n        loadingMore: PropTypes.bool,\n        mode: PropTypes.string,\n        query: PropTypes.string\n    }\n\n    render() {\n        return (\n            <div>\n                <div className='movies-list'>\n                    <TransitionGroup>\n                        { this.renderItems() }\n                    </TransitionGroup>\n                </div>\n                { this.renderLoadMore() }\n            </div>\n        )\n    }\n\n    componentDidMount() {\n        this.props.loadMovies()\n        this.props.loadGenres()\n    }\n\n    renderItems = () => {\n        const { movies, genres } = this.props\n\n        return movies.map(movie => {\n            return <CSSTransition\n                key={ movie.id }\n                classNames='fade'\n                timeout={{\n                    appear: 500,\n                    enter: 500,\n                    exit: 500\n                }}\n                appear>\n                <div className='movies-list__item'>\n                    <Movie\n                        movie={ movie }\n                        genres={ genres }/>\n                </div>\n            </CSSTransition>\n        })\n    }\n\n    renderLoadMore = () => {\n        const { pages, page } = this.props\n\n        if (pages > 1 && page !== pages ) return <LoadMore/>\n    }\n}\n\nexport default connect(state => ({\n    movies: state.movies.results,\n    genres: state.genres.genres,\n    pages: state.movies.total_pages,\n    page: state.movies.page,\n    loadingMore: state.movies.loadingMore,\n    mode: state.movies.mode,\n    query: state.movies.query\n}), {\n    loadMovies,\n    loadGenres\n})(MoviesList)\n","import React from 'react'\n\nconst items = [\n    {\n      name: 'github',\n      url: 'https://github.com/iryna-zgn',\n      isActive: true\n    },\n    {\n      name: 'instagram',\n      url: 'https://www.instagram.com/dmytruk.i/',\n      isActive: true\n    },\n    {\n      name: 'facebook',\n      url: '#',\n      isActive: false\n    }\n]\n\nconst renderItems = () => {\n  return items.map(item => {\n    if (item.isActive) {\n      return <li\n          key={ item.name }\n          className='soc-links__item'>\n          <a\n              href={ item.url }\n              title={ item.name }\n              className='soc-links__link'\n              target='_blank'\n              rel='noopener noreferrer'>\n            <span className={ `soc-links__icon icon-${item.name}` }/>\n          </a>\n      </li>\n    } else {\n      return null\n    }\n  })\n}\n\nexport default function socLinks() {\n  return (\n      <ul className='soc-links'>{ renderItems() }</ul>\n  )\n}\n","import React from 'react'\nimport Logo from './../../components/Logo'\nimport SocLinks from './../../components/SocLinks'\n\nexport default function footer() {\n    return (\n        <footer className='footer'>\n            <div className='footer__inline'>\n                <SocLinks/>\n                <Logo\n                    link='https://rho-blog.github.io/rho/'\n                    text='blog'\n                    isSmall\n                    isTargetBlank\n                    title='rho blog'/>\n            </div>\n            <div className='footer__copyright'>\n                © { (new Date()).getFullYear() }\n            </div>\n        </footer>\n    )\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Header from './components/Header'\nimport MoviesList from './components/MoviesList'\nimport Footer from './components/Footer'\nimport Preloader from './components/Preloader'\nimport { connect } from 'react-redux'\n\nclass App extends Component {\n    static propTypes = {\n        loading: PropTypes.bool\n    }\n\n    render() {\n        return (\n            <div className='container'>\n                <div>\n                    <Header/>\n                    <MoviesList/>\n                </div>\n                <Footer/>\n                { this.renderPreloader() }\n            </div>\n        )\n    }\n\n    renderPreloader = () => {\n        if (this.props.loading) return <Preloader isFixed/>\n    }\n}\n\nexport default connect(state => ({\n    loading: state.movies.loading\n}))(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { Map } from 'immutable'\n\nexport function objToMap(obj, DataRecord = Map) {\n    return Object.keys(obj).reduce((acc, key) => acc.set(key, obj[key]), new DataRecord())\n}\n","import { actions } from './../constants'\n// eslint-disable-next-line\nimport { Map, Record } from 'immutable'\nimport { objToMap } from './../helpers'\nimport { modes } from './../constants'\n\nconst ReducerState = Record({\n    results: [],\n    total_pages: 1,\n    page: 1,\n    total_results: 0,\n    loading: false,\n    loadingMore: false,\n    mode: modes.POPULAR,\n    query: ''\n})\n\nexport default (state = new ReducerState(), action) => {\n    const { type, payload, response } = action\n\n    switch (type) {\n        case actions.LOAD_MOVIES + actions.START:\n            return state.set('loading', true)\n\n        case actions.LOAD_MOVIES + actions.SUCCESS:\n            return objToMap(response, ReducerState)\n                    .set('query', payload.query)\n                    .set('mode', payload.mode)\n                    .set('loading', false)\n\n        case actions.LOAD_NEXT_PAGE + actions.START:\n            return state.set('loadingMore', true)\n\n        case actions.LOAD_NEXT_PAGE + actions.SUCCESS:\n            return state\n                    .set('page', payload.page)\n                    .set('results', [...state.results, ...response.results])\n                    .set('loadingMore', false)\n\n        case actions.SET_QUERY:\n            return state.set('query', payload.query)\n\n        default:\n            return state\n    }\n}\n","import { actions } from './../constants'\n// eslint-disable-next-line\nimport { Map, Record } from 'immutable'\nimport { objToMap } from './../helpers'\n\nconst GenreRecord = Record({\n    genres: []\n})\n\nexport default (state = new GenreRecord(), action) => {\n    const { type, response } = action\n\n    switch (type) {\n        case actions.LOAD_GENRES + actions.SUCCESS:\n            return objToMap(response, GenreRecord)\n\n        default:\n            return state\n    }\n}\n","import { combineReducers } from 'redux'\nimport movies from './movies'\nimport genres from './genres'\n\nexport default combineReducers({\n    movies,\n    genres\n})\n","import { createStore, applyMiddleware } from 'redux'\nimport reducer from '../reducer'\nimport api from '../middlewares/api'\n\nconst enhancer = applyMiddleware(api)\n\nconst store = createStore(reducer, {}, enhancer)\n\nwindow.store = store\n\nexport default store\n","import { actions } from './../constants'\n\nexport default store => next => action => {\n    const { callAPI, type, ...rest } = action\n    if (!callAPI) return next(action)\n\n    next({\n        ...rest,\n        type: type + actions.START\n    })\n\n    setTimeout(() => {\n        fetch(callAPI)\n            .then(response => response.json())\n            .then(response => next({...rest, type: type + actions.SUCCESS, response}))\n            .catch(err => next({...rest, type: type + actions.ERR, err}))\n    }, 700)\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/styles.sass'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n// eslint-disable-next-line\nimport store from './store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}