{"version":3,"sources":["constants.js","components/Logo/index.js","paths.js","ac/index.js","components/NoResults/index.js","components/SearchForm/index.js","components/SocLinks/index.js","components/Header/index.js","components/Stars/index.js","helpers.js","components/Movie/index.js","components/Preloader/index.js","components/LoadMore/index.js","components/MoviesList/index.js","pages/Home/index.js","pages/Search/index.js","components/Cast/index.js","components/Backdrops/index.js","components/MovieDetails/index.js","pages/Movie/index.js","components/Footer/index.js","components/Modal/index.js","components/Gallery/index.js","components/Modals/GalleryModal/index.js","components/Modals/index.js","App.js","serviceWorker.js","reducer/movies.js","reducer/genres.js","reducer/modals.js","reducer/index.js","store/index.js","middlewares/api.js","ScrollToTop.js","index.js"],"names":["modes","POPULAR","SEARCH","classes","IS_FOCUS","IS_FIXED","IS_SMALL","actions","LOAD_MOVIES","LOAD_MOVIE","LOAD_CREDITS","LOAD_GENRES","LOAD_NEXT_PAGE","SET_QUERY","START","SUCCESS","ERR","TOGGLE_MODAL","modals","GALLERY_MODAL","Logo","props","className","isSmall","concat","react_default","a","createElement","href","link","title","target","isTargetBlank","rel","text","BASE","KEY","URL_POPULAR","URL_SEARCH","URL_IMG","URL_GENRES","URL_MOVIE","RHO","BLOG","MOVIES","socLinks","name","url","isActive","getUrl","mode","query","page","loadMovies","arguments","length","undefined","type","payload","callAPI","loadGenres","toggleModal","action","parameter","NoResults","react_router_dom","to","SearchForm","state","isFocus","handleChange","e","_this","setQuery","value","handleSubmit","_this$props","lastQuery","preventDefault","history","push","addFocus","setState","removeFocus","renderMsg","total_results","classNameInput","this","onSubmit","placeholder","onChange","onFocus","onBlur","Component","withRouter","connect","movies","renderItems","links","map","item","key","SocLinks","Header","components_SearchForm","Stars","renderFilledStars","count","getCount","evaluation","stars","Array","fill","star","index","Math","round","objToMap","obj","DataRecord","Map","Object","keys","reduce","acc","set","getImg","img","separateByCommas","arr","el","getYear","date","slice","formatNumber","number","symbol","toString","replace","formatTime","h","floor","min","Movie","getGenres","ids","genres","currentGenres","Set","forEach","id","genre","add","toConsumableArray","renderGenres","movie","style","backgroundImage","poster_path","src","alt","genre_ids","release_date","Stars_Stars","vote_average","vote_count","WebkitBoxOrient","overview","Preloader","isFixed","LoadMore","handleClickMore","loadNextPage","loadingMore","onClick","MoviesList","react_transition_group","classNames","timeout","appear","enter","exit","Movie_Movie","renderLoadMore","_this$props2","pages","components_LoadMore","results","total_pages","Home","components_MoviesList","Search","nextProps","renderCast","cast","cast_id","profile_path","character","Cast","Backdrops","renderBackdrops","images","backdrops","file_path","showImg","MovieDetails","getDetails","data","val","runtime","original_language","budget","getCrew","m","job","has","get","entries","getDataByName","renderRows","renderHomeLink","components_Backdrops","credits","_this2","production_countries","production_companies","crew","homepage","components_MovieDetails","loadMovie","loadCredits","Footer","Date","getFullYear","Modal","closeModal","toggleBodyFixed","document","querySelector","classList","toggle","children","window","addEventListener","Gallery","gallery","renderImage","renderArrow","arrow","getIndex","len","keyCode","GalleryModal","components_Modal","components_Gallery","Modals","getModals","component","renderModals","modal","modalsState","App","getSearch","_ref","match","params","pages_Search","getMovie","_ref2","pages_Movie","renderPreloader","loading","react_router","exact","path","render","components_Modals","Boolean","location","hostname","ReducerState","Record","GenreRecord","isGalleryModal","combineReducers","response","enhancer","applyMiddleware","store","next","rest","objectWithoutProperties","objectSpread","setTimeout","fetch","then","json","catch","err","createStore","reducer","ScrollToTop","prevProps","pathname","scrollTo","ReactDOM","es","src_ScrollToTop","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5bf4964d.chunk.js","sourcesContent":["export const modes = {\n    POPULAR: 'popular',\n    SEARCH: 'search'\n}\n\nexport const classes = {\n    IS_FOCUS: 'is-focus',\n    IS_FIXED: 'is-fixed',\n    IS_SMALL: 'is-small'\n}\n\nexport const actions = {\n    LOAD_MOVIES: 'LOAD_MOVIES',\n    LOAD_MOVIE: 'LOAD_MOVIE',\n    LOAD_CREDITS: 'LOAD_CREDITS',\n    LOAD_GENRES: 'LOAD_GENRES',\n    LOAD_NEXT_PAGE: 'LOAD_NEXT_PAGE',\n    SET_QUERY: 'SET_QUERY',\n    START: 'START',\n    SUCCESS: 'SUCCESS',\n    ERR: 'ERR',\n    TOGGLE_MODAL: 'TOGGLE_MODAL'\n}\n\nexport const modals = {\n    GALLERY_MODAL: 'GalleryModal'\n}\n","import React from 'react'\nimport { classes } from './../../constants'\n\nexport default function Logo(props) {\n    let className= 'logo'\n\n    if (props.isSmall) className += ` ${classes.IS_SMALL}`\n\n    return (\n        <div className={ className }>\n            <a\n                href={ props.link || '#'}\n                title={ props.title }\n                target={ props.isTargetBlank ? '_blank' :  '_self'}\n                className='logo__link'\n                rel='noopener noreferrer'>\n                <span className='logo__main'>rho</span>\n                <span className='logo__text'>{ props.text }</span>\n            </a>\n        </div>\n    )\n}\n","const BASE = 'https://api.themoviedb.org'\nexport const KEY = 'ac710db081029f2383b7c329b25a753a'\nexport const URL_POPULAR = `${BASE}/3/movie/popular?api_key=${KEY}`\nexport const URL_SEARCH = `${BASE}/3/search/movie?api_key=${KEY}`\nexport const URL_IMG = `https://image.tmdb.org/t/p/w500`\nexport const URL_GENRES = `${BASE}/3/genre/list?api_key=${KEY}`\nexport const URL_MOVIE = `${BASE}/3/movie/`\n\nexport const RHO = {\n    BLOG: 'https://iryna-zgn.github.io/vue.js-blog',\n    MOVIES: 'https://iryna-zgn.github.io/react.js-movie-db'\n}\n\nexport const socLinks = [\n    {\n        name: 'github',\n        url: 'https://github.com/iryna-zgn',\n        isActive: true\n    },\n    {\n        name: 'instagram',\n        url: '#',\n        isActive: false\n    },\n    {\n        name: 'facebook',\n        url: '#',\n        isActive: false\n    }\n]\n","import { actions } from './../constants'\nimport { URL_POPULAR, URL_GENRES, URL_SEARCH, URL_MOVIE, KEY } from './../paths'\nimport { modes } from './../constants'\n\nfunction getUrl(mode, query, page) {\n    return mode === modes.POPULAR\n        ? `${URL_POPULAR}&page=${page}`\n        : `${URL_SEARCH}&query=${query}&page=${page}`\n}\n\nexport function loadMovies(mode = modes.POPULAR, query = '', page = 1) {\n    return {\n        type: actions.LOAD_MOVIES,\n        payload: { mode, query },\n        callAPI: getUrl(mode, query, page)\n    }\n}\n\nexport function loadMovie(id) {\n    return {\n        type: actions.LOAD_MOVIE,\n        callAPI: `${URL_MOVIE}${id}?api_key=${KEY}&append_to_response=images`\n    }\n}\n\nexport function loadCredits(id) {\n    return {\n        type: actions.LOAD_CREDITS,\n        callAPI: `${URL_MOVIE}${id}/credits?api_key=${KEY}`\n    }\n}\n\nexport function loadNextPage(mode = modes.POPULAR, query = '', page = 1) {\n    return {\n        type: actions.LOAD_NEXT_PAGE,\n        payload: { page },\n        callAPI: getUrl(mode, query, page)\n    }\n}\n\nexport function loadGenres() {\n    return {\n        type: actions.LOAD_GENRES,\n        callAPI: URL_GENRES\n    }\n}\n\nexport function setQuery(query) {\n    return {\n        type: actions.SET_QUERY,\n        payload: { query }\n    }\n}\n\nexport function toggleModal(name, action, parameter) {\n    return {\n        type: actions.TOGGLE_MODAL,\n        payload: { name, action, parameter }\n    }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default function NoResults() {\n    return (\n        <div className='no-results'>\n            <div className='no-results__msg'>No results :(</div>\n            <Link to={'/'}\n                  className='no-results__link'>\n                Popular movies\n            </Link>\n        </div>\n    )\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { loadMovies, setQuery } from './../../ac'\nimport { classes, modes } from './../../constants'\nimport { withRouter } from 'react-router-dom'\nimport NoResults from './../../components/NoResults'\n\nclass SearchForm extends Component {\n    static propTypes = {\n        query: PropTypes.string,\n        lastQuery: PropTypes.string,\n        setQuery: PropTypes.func,\n        loadMovies: PropTypes.func,\n        total_results: PropTypes.number\n    }\n\n    state = {\n        isFocus: false\n    }\n\n    render() {\n        let classNameInput = 'search__field'\n        if (this.state.isFocus) classNameInput += ` ${classes.IS_FOCUS}`\n\n        return (\n            <div className='search'>\n                <form\n                    className='search__form'\n                    onSubmit={ this.handleSubmit }>\n                    <div\n                        className={ classNameInput }>\n                        <input\n                            value={ this.props.query }\n                            placeholder='Search for a movie'\n                            type='text'\n                            onChange={ this.handleChange }\n                            onFocus={ this.addFocus }\n                            onBlur={ this.removeFocus }/>\n                    </div>\n                    <button className='search__btn icon-search'/>\n                </form>\n                { this.renderMsg() }\n            </div>\n        )\n    }\n\n    handleChange = e => this.props.setQuery(e.target.value)\n\n    handleSubmit = e => {\n        const { query, lastQuery } = this.props\n\n        e.preventDefault()\n\n        if (query && query !== lastQuery) {\n            this.props.loadMovies(modes.SEARCH, query)\n            this.props.history.push(`/search/${query}`)\n        }\n    }\n\n    addFocus = () => {\n        this.setState({\n            isFocus: true\n        })\n    }\n\n    removeFocus = () => {\n        this.setState({\n            isFocus: false\n        })\n    }\n\n    renderMsg = () => {\n        if (!this.props.total_results) {\n            return <NoResults/>\n        }\n    }\n}\n\nexport default withRouter(connect(state => ({\n    query: state.movies.query,\n    lastQuery: state.movies.lastQuery,\n    total_results: state.movies.total_results\n}), {\n    loadMovies,\n    setQuery\n})(SearchForm))\n","import React from 'react'\nimport { socLinks as links } from './../../paths'\n\nconst renderItems = () => {\n  return links.map(item => {\n    if (!item.isActive) return null\n    \n    return (\n      <li\n          key={ item.name }\n          className='soc-links__item'>\n        <a\n            href={ item.url }\n            title={ item.name }\n            className='soc-links__link'\n            target='_blank'\n            rel='noopener noreferrer'>\n          <span className={ `soc-links__icon icon-${item.name}` }/>\n        </a>\n      </li>\n    )\n  })\n}\n\nexport default function SocLinks() {\n  return (\n      <ul className='soc-links'>{ renderItems() }</ul>\n  )\n}\n","import React from 'react'\nimport Logo from './../Logo'\nimport SearchForm from './../SearchForm'\nimport SocLinks from './../../components/SocLinks'\nimport { RHO } from './../../paths'\n\nexport default function Header() {\n    return (\n        <header className='header'>\n            <div className='header__main'>\n                <Logo\n                    text='movies'\n                    link={ RHO.MOVIES} />\n                <SearchForm/>\n            </div>\n            <div className='header__links'>\n                <SocLinks/>\n                <Logo\n                    link={ RHO.BLOG }\n                    text='blog'\n                    isSmall\n                    isTargetBlank\n                    title='rho blog'/>\n            </div>\n        </header>\n    )\n}\n","import React, { Component } from 'react'\n\nexport default class Stars extends Component {\n    render() {\n        if (!this.props.evaluation) return null\n\n        return (\n            <div className='evaluation'>\n                <div className='evaluation__stars'>\n                    { this.renderFilledStars() }\n                </div>\n                <span>{ this.props.count }</span>\n            </div>\n        )\n    }\n\n    renderFilledStars = () => {\n        const count = this.getCount(this.props.evaluation)\n        const stars = new Array(5).fill('')\n\n        stars.fill('-filled', 0, count)\n\n        return stars.map((star, index) => {\n            return (\n                <div key = { index } className='evaluation__stars-item'>\n                    <span className={`icon-star${star}`}/>\n                </div>\n            )\n        })\n    }\n\n    getCount = evaluation => Math.round(evaluation / 2)\n}\n","import { Map } from 'immutable'\nimport { URL_IMG } from './paths'\n\nexport function objToMap(obj, DataRecord = Map) {\n    return Object.keys(obj).reduce((acc, key) => acc.set(key, obj[key]), new DataRecord())\n}\n\nexport function getImg(img) {\n    return img ? `${URL_IMG}${img}` : 'static/images/rho_light.jpg'\n}\n\nexport function separateByCommas(arr) {\n    if (arr) return arr.reduce((acc, el, index) => acc + (index ? ', ' : '') + el.name , '')\n}\n\nexport function getYear(date){\n    if (date) return date.slice(0, 4)\n}\n\nexport function formatNumber(number, symbol='') {\n    if (number) return symbol + number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n}\n\nexport function formatTime(number) {\n    if (number) {\n        const h = Math.floor(number / 60)\n        const min = number % 60\n\n        return (h ? `${h} h` : '') + (min ? ` ${min} min` : '')\n    }\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Stars from './../../components/Stars'\nimport { Link } from 'react-router-dom'\nimport { getImg, separateByCommas, getYear } from '../../helpers'\n\nexport default class Movie extends Component {\n    static propTypes = {\n        movie: PropTypes.shape({\n            poster_path: PropTypes.string,\n            title: PropTypes.string,\n            genre_ids: PropTypes.array,\n            release_date: PropTypes.string,\n            overview: PropTypes.string\n        }),\n        genres: PropTypes.array\n    }\n\n    render() {\n        const { movie } = this.props\n\n        return (\n            <div className='movie'>\n                <Link to={`/movie/${movie.id}`}\n                    className='movie__img'\n                    style={{ backgroundImage: `url(${getImg(movie.poster_path)})` }}>\n                    <img src='static/images/rho_light.jpg' alt='' className='u-dummy'/>\n                </Link>\n                <div>\n                    <Link to={`/movie/${movie.id}`}\n                          className='movie__title t2'>\n                        { movie.title }\n                    </Link>\n                    <div className='movie__prop'>\n                        { this.renderGenres(movie.genre_ids) }\n                    </div>\n                    <div className='movie__prop'>\n                        { getYear(movie.release_date) }\n                    </div>\n                    <Stars\n                        evaluation={ movie.vote_average }\n                        count={ movie.vote_count }/>\n                    <div\n                        className='movie__desc'\n                        style={{ WebkitBoxOrient: 'vertical' }}>\n                        { movie.overview }\n                    </div>\n                    <Link to={`/movie/${movie.id}`}\n                          className='movie__link'>\n                        Read more\n                    </Link>\n                </div>\n            </div>\n        )\n    }\n\n    getGenres = ids => {\n        const { genres } = this.props\n        const currentGenres = new Set()\n\n        ids.forEach(id => {\n            genres.forEach(genre => {\n                if (genre.id === id) {\n                    currentGenres.add(genre)\n                }\n            })\n        })\n\n        return [...currentGenres]\n    }\n\n    renderGenres = ids => separateByCommas(this.getGenres(ids))\n}\n","import React from 'react'\nimport { classes } from './../../constants'\n\nexport default function Preloader(props) {\n  let className = 'preloader'\n\n  if (props.isFixed) className += ` ${classes.IS_FIXED}`\n\n  return (\n      <div className={ className }>\n          <div className='preloader__inner'/>\n      </div>\n  )\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Preloader from './../../components/Preloader'\nimport { connect } from 'react-redux'\nimport { loadNextPage } from './../../ac'\n\n\nclass LoadMore extends Component {\n    static propTypes = {\n        page: PropTypes.number,\n        loadNextPage: PropTypes.func,\n        loadingMore: PropTypes.bool,\n        mode: PropTypes.string,\n        query: PropTypes.string\n    }\n\n    render() {\n        return (\n            <div className='load-more'>\n                {\n                    this.props.loadingMore\n                        ? <div className='load-more__preloader'><Preloader/></div>\n                        : <div onClick={ this.handleClickMore } className='load-more__link'>Load more</div>\n                }\n            </div>\n        )\n    }\n\n    handleClickMore = () => {\n        const { page, mode, query } = this.props\n\n        this.props.loadNextPage(mode, query, page + 1)\n    }\n}\n\nexport default connect(state => ({\n    page: state.movies.page,\n    loadingMore: state.movies.loadingMore,\n    mode: state.movies.mode,\n    query: state.movies.query\n}), {\n    loadNextPage\n})(LoadMore)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Movie from './../Movie'\nimport LoadMore from './../LoadMore'\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\nimport { connect } from 'react-redux'\n\n\nclass MoviesList extends Component {\n    static propTypes = {\n        movies: PropTypes.array,\n        genres: PropTypes.array,\n        pages: PropTypes.number,\n        page: PropTypes.number\n    }\n\n    render() {\n        return (\n            <div>\n                <div className='movies-list'>\n                    <TransitionGroup>\n                        { this.renderItems() }\n                    </TransitionGroup>\n                </div>\n                { this.renderLoadMore() }\n            </div>\n        )\n    }\n\n    renderItems = () => {\n        const { movies, genres } = this.props\n\n        return movies.map(movie => {\n            return (\n                <CSSTransition\n                    key={ movie.id }\n                    classNames='fade'\n                    timeout={{ appear: 300, enter: 300, exit: 300 }}\n                    appear>\n                    <div className='movies-list__item'>\n                        <Movie\n                            movie={ movie }\n                            genres={ genres }/>\n                    </div>\n                </CSSTransition>\n            )\n        })\n    }\n\n    renderLoadMore = () => {\n        const { pages, page } = this.props\n\n        if (pages > 1 && page !== pages ) return <LoadMore/>\n    }\n}\n\nexport default connect(state => ({\n    movies: state.movies.results,\n    genres: state.genres.genres,\n    pages: state.movies.total_pages,\n    page: state.movies.page\n}))(MoviesList)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport MoviesList from './../../components/MoviesList'\nimport { loadMovies, loadGenres } from './../../ac'\nimport { connect } from 'react-redux'\n\nclass Home extends Component{\n    static propTypes = {\n        loadMovies: PropTypes.func,\n        loadGenres: PropTypes.func\n    }\n\n    render() {\n        return <MoviesList />\n    }\n\n    componentDidMount() {\n        this.props.loadMovies()\n        this.props.loadGenres()\n    }\n}\n\n\nexport default connect(null, {\n    loadMovies,\n    loadGenres\n})(Home)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport MoviesList from './../../components/MoviesList'\nimport { loadMovies, loadGenres } from './../../ac'\nimport { connect } from 'react-redux'\nimport { modes } from './../../constants'\n\nclass Search extends Component{\n    static propTypes = {\n        query: PropTypes.string,\n        loadMovies: PropTypes.func,\n        loadGenres: PropTypes.func\n    }\n\n    render() {\n        return <MoviesList query={ this.props.query }/>\n    }\n\n    componentDidMount() {\n        this.props.loadMovies(modes.SEARCH, this.props.query)\n        this.props.loadGenres()\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.query !== this.props.query) {\n            this.props.loadMovies(modes.SEARCH, nextProps.query)\n        }\n    }\n}\n\nexport default connect(null, {\n    loadMovies,\n    loadGenres\n})(Search)\n","import React from 'react'\nimport { getImg } from './../../helpers'\n\nconst renderCast = cast => {\n    if (!cast) return null\n\n    return cast.slice(0, 6).map(el => {\n        return (\n            <div\n                key={ el.cast_id }\n                className='cast__item'>\n                <div\n                    className='cast__img'\n                    style={{ backgroundImage: `url(${getImg(el.profile_path)})` }}>\n                    <img src='static/images/rho_light.jpg' alt='' className='u-dummy'/>\n                </div>\n                <div className='t4'>{ el.name }</div>\n                <div className='cast__desc'>{ el.character }</div>\n            </div>\n        )\n    })\n}\n\nexport default function Cast(props) {\n    if (!props.cast.length) return null\n\n    return (\n        <div className='cast'>\n            <h2 className='t2'>Cast</h2>\n            <div className='cast__list'>\n                { renderCast(props.cast) }\n            </div>\n        </div>\n    )\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { getImg } from './../../helpers'\nimport { connect } from 'react-redux'\nimport { toggleModal } from './../../ac'\nimport { modals } from './../../constants'\n\nclass Backdrops extends Component {\n    static propTypes = {\n        images: PropTypes.shape({\n            backdrops: PropTypes.array\n        }),\n        toggleModal: PropTypes.func\n    }\n\n    render() {\n        if (!this.props.images.backdrops.length) return null\n\n        return (\n            <div className='backdrops'>\n                <h2 className='t2'>Backdrops</h2>\n                <div className='backdrops__gallery u-scrollbar-x'>\n                    { this.renderBackdrops(this.props.images) }\n                </div>\n            </div>\n        )\n    }\n\n    renderBackdrops = images => {\n        if (!images) return null\n\n        return images.backdrops.map((el, index) => {\n            return (\n                <img\n                    key={el.file_path}\n                    src={ getImg(el.file_path) }\n                    onClick={ () => this.showImg(index) }\n                    alt=''/>\n            )\n        })\n    }\n\n    showImg = (index) => {\n        this.props.toggleModal(\n            modals.GALLERY_MODAL,\n            true,\n            {\n                images: this.props.images.backdrops,\n                index\n            }\n        )\n    }\n}\n\nexport default connect(null, {\n    toggleModal\n})(Backdrops)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { getImg, separateByCommas, getYear, formatNumber, formatTime  } from '../../helpers'\nimport Stars from './../../components/Stars'\nimport Cast from './../../components/Cast'\nimport Backdrops from './../../components/Backdrops'\nimport { toggleModal } from './../../ac'\nimport { modals } from './../../constants'\n\nclass MovieDetails extends Component {\n    static propTypes = {\n        id: PropTypes.string,\n        movie: PropTypes.object,\n        credits: PropTypes.object\n    }\n\n    render() {\n        const { movie, credits } = this.props\n\n        return (\n            <div className='movie-details'>\n                <div className='movie-details__parts'>\n                    <div className='movie-details__const'>\n                        <div className='movie-details__poster'\n                             onClick={() => this.showImg(movie.poster_path)}>\n                            <img src={ getImg(movie.poster_path) } alt=''/>\n                        </div>\n                    </div>\n                    <div className='movie-details__var'>\n                        <h1>{movie.title }</h1>\n                        <Stars\n                            evaluation={ movie.vote_average }\n                            count={ movie.vote_count }/>\n                        <table className='movie-details__props'>\n                            <tbody>\n                              { this.renderRows(this.getDetails(movie)) }\n                              { this.renderRows(this.getDataByName(movie.production_countries, 'Country')) }\n                              { this.renderRows(this.getDataByName(movie.production_companies, 'Production')) }\n                              { this.renderRows(this.getCrew(credits.crew)) }\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n                <div className='movie-details__desc'>\n                    <p>{ movie.overview }</p>\n                    { this.renderHomeLink(movie.homepage) }\n                </div>\n                { this.renderCast(credits.cast) }\n                { this.renderBackdrops(movie.images) }\n            </div>\n        )\n    }\n\n    getDetails = data => {\n        return [\n            {\n                key: 'Genre',\n                val: separateByCommas(data.genres)\n            },\n            {\n                key: 'Runtime',\n                val: formatTime(data.runtime)\n            },\n            {\n                key: 'Original language',\n                val: data.original_language\n            },\n            {\n                key: 'Release year',\n                val: getYear(data.release_date)\n            },\n            {\n                key: 'Budget',\n                val: formatNumber(data.budget, '$')\n            },\n        ]\n\n    }\n\n    getCrew = (data=[]) => {\n        const jobs = [\n            'Director',\n            'Producer',\n            'Screenplay',\n            'Writer',\n            'Music',\n            'Original Music Composer'\n        ]\n        const m = new Map()\n\n        jobs.forEach(job => {\n            data.forEach(el => {\n                if (el.job === job) {\n                    m.set(el.job, m.has(el.job) ? `${m.get(el.job)}, ${el.name}` : el.name)\n                }\n            })\n        })\n\n        return [...m.entries()].map(el => {\n            return {\n                key: el[0],\n                val: el[1]\n            }\n        })\n    }\n\n    getDataByName = (data=[], name='') => {\n        return [{\n            key: name,\n            val: separateByCommas(data)\n        }]\n    }\n\n    renderRows = data => {\n        return data.map((el, index) => {\n            if (!el.val) return null\n\n            return (\n                <tr key={ el.key + index }>\n                    <td>{ el.key }</td>\n                    <td>{ el.val }</td>\n                </tr>\n            )\n        })\n\n    }\n\n    renderHomeLink = url => {\n        if (!url) return null\n\n        return (\n            <a\n                href={ url }\n                className='movie-details__link'\n                target='_blank'\n                rel='noopener noreferrer'>\n                homepage\n            </a>\n        )\n    }\n\n    renderBackdrops = images => {\n        if (!this.props.movie.images) return null\n\n        return <Backdrops images={ images }/>\n    }\n\n    renderCast = cast => {\n        if (!this.props.credits.cast) return null\n\n        return <Cast cast={ cast }/>\n    }\n\n    showImg = (file_path) => {\n        this.props.toggleModal(\n            modals.GALLERY_MODAL,\n            true,\n            { images: [{ file_path }] }\n        )\n    }\n}\n\nexport default connect(state => ({\n    movie: state.movies.movie,\n    credits: state.movies.credits\n}), {\n    toggleModal\n})(MovieDetails)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport MovieDetails from './../../components/MovieDetails'\nimport { loadMovie, loadCredits } from './../../ac'\nimport { connect } from 'react-redux'\n\nclass Movie extends Component {\n    static propTypes = {\n        id: PropTypes.string,\n        loadMovie: PropTypes.func,\n        loadCredits: PropTypes.func\n    }\n\n    render() {\n        return <MovieDetails id={ this.props.id } />\n    }\n\n    componentDidMount() {\n        this.props.loadMovie(this.props.id)\n        this.props.loadCredits(this.props.id)\n    }\n}\n\nexport default connect(null, {\n    loadMovie,\n    loadCredits\n})(Movie)","import React from 'react'\n\nexport default function Footer() {\n    return (\n        <footer className='footer'>\n            <div className='footer__copyright'>\n                © { (new Date()).getFullYear() } Rho\n            </div>\n        </footer>\n    )\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { toggleModal } from './../../ac'\nimport { classes } from './../../constants'\n\nclass Modal extends Component {\n    static propTypes = {\n        name: PropTypes.string,\n        toggleModal: PropTypes.func\n    }\n\n    render() {\n        return (\n            <div className='modal'>\n                <div className='modal__backdrop' onClick={ this.closeModal }/>\n                <span className='modal__close' onClick={ this.closeModal }>\n                        &times;\n                    </span>\n                <div className='modal__container'>\n                    { this.props.children }\n                </div>\n            </div>\n        )\n    }\n\n    closeModal = () => {\n        this.props.toggleModal(this.props.name, false)\n    }\n\n    toggleBodyFixed = () => {\n        document.querySelector('html').classList.toggle(classes.IS_FIXED)\n    }\n\n    componentDidMount() {\n        window.addEventListener('keydown', (e) => {\n            if (e.key === 'Escape' || e.key === 'Backspace') {\n                this.closeModal()\n            }\n        })\n        this.toggleBodyFixed()\n    }\n\n    componentWillUnmount() {\n        this.toggleBodyFixed()\n    }\n}\n\nexport default connect(null, {\n    toggleModal\n})(Modal)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { getImg } from './../../helpers'\n\nclass Gallery extends Component {\n\tstatic propTypes = {\n\t\tgallery: PropTypes.shape({\n\t\t\timages: PropTypes.array,\n\t\t\tindex: PropTypes.number\n\t\t})\n\t}\n\n\tstate = {\n\t\tindex: this.props.gallery.index || 0\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className='gallery'>\n\t\t\t\t{ this.renderArrow('left', 'prev') }\n\t\t\t\t{ this.renderImage() }\n\t\t\t\t{ this.renderArrow('right', 'next') }\n\t\t\t</div>\n\t\t)\n\t}\n\n\trenderImage = () => {\n\t\tif (!this.props.gallery) return null\n\n\t\tconst { index } = this.state\n\t\tconst images = this.props.gallery.images\n\n\t\treturn (\n\t\t\t<img src={ getImg(images[index].file_path) } alt=''/>\n\t\t)\n\t}\n\n\trenderArrow = (arrow, name) => {\n\t\tif (!this.props.gallery) return null\n\n\t\tif (this.props.gallery.images.length > 1) {\n\t\t\treturn (\n\t\t\t\t<div className={`gallery__arrow gallery__arrow--${arrow} icon-arrow-${arrow}`}\n\t\t\t\t\t title={ name }\n\t\t\t\t\t onClick={ () => this.getIndex(name) }/>\n\t\t\t)\n\t\t}\n\t}\n\n\tgetIndex = (arrow) => {\n\t\tif (!this.props.gallery) return null\n\n\t\tconst len = this.props.gallery.images.length\n\t\tconst { index } = this.state\n\n\t\tif (arrow === 'next') {\n\t\t\tthis.setState({\n\t\t\t\tindex: index === len - 1 ? 0 : index + 1\n\t\t\t})\n\t\t} else if (arrow === 'prev') {\n\t\t\tthis.setState({\n\t\t\t\tindex: index === 0 ? len - 1 : index - 1\n\t\t\t})\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif (this.props.gallery.images.length > 1) {\n\t\t\twindow.addEventListener('keydown', e => {\n\t\t\t\tif (e.keyCode === 37) {\n\t\t\t\t\tthis.getIndex('prev')\n\t\t\t\t} else if (e.keyCode === 39) {\n\t\t\t\t\tthis.getIndex('next')\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n}\n\nexport default connect(state => ({\n\tgallery: state.modals.parameter\n}))(Gallery)\n","import React from 'react'\nimport Modal from './../../../components/Modal'\nimport Gallery from './../../../components/Gallery'\nimport { modals } from './../../../constants'\n\nexport default function GalleryModal() {\n    return (\n        <Modal name={ modals.GALLERY_MODAL }>\n            <Gallery/>\n        </Modal>\n    )\n}\n","import React, { Component } from 'react'\nimport GalleryModal from './../../components/Modals/GalleryModal'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { modals } from './../../constants'\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\n\nclass Modals extends Component {\n    static propTypes = {\n        modalsState: PropTypes.object\n    }\n\n    render() {\n        return (\n            <div>\n                <TransitionGroup>\n                    { this.renderModals() }\n                </TransitionGroup>\n            </div>\n        )\n    }\n\n    getModals = () => {\n        return [\n            {\n                name: modals.GALLERY_MODAL,\n                component: <GalleryModal/>\n            }\n        ]\n    }\n\n    renderModals = () => {\n        return this.getModals().map((modal, index) => {\n            if (!this.props.modalsState[`is${modal.name}`]) return null\n\n            return (\n                <CSSTransition\n                    key={ modal.name + index }\n                    classNames='fade'\n                    timeout={{ appear: 300, enter: 300, exit: 300 }}>\n                    <div>\n                        { modal.component }\n                    </div>\n                </CSSTransition>\n            )\n        })\n    }\n}\n\nexport default connect(state => ({\n    modalsState: state.modals\n}))(Modals)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Header from './components/Header'\nimport Home from './pages/Home'\nimport Search from './pages/Search'\nimport Movie from './pages/Movie'\nimport Footer from './components/Footer'\nimport Modals from './components/Modals'\nimport Preloader from './components/Preloader'\nimport { connect } from 'react-redux'\nimport { Route, Switch } from 'react-router-dom'\n\nclass App extends Component {\n    static propTypes = {\n        query: PropTypes.string,\n        loading: PropTypes.bool\n    }\n\n    render() {\n        return (\n            <div className='container'>\n                <div>\n                    <Header/>\n                    <Switch>\n                        <Route exact path='/' component={ Home }/>\n                        <Route path='/search/:query' render={ this.getSearch }/>\n                        <Route path='/movie/:id' render={ this.getMovie }/>\n                    </Switch>\n                </div>\n                <div>\n                  <Footer/>\n                  <Modals/>\n                  { this.renderPreloader() }\n                </div>\n            </div>\n        )\n    }\n\n    getSearch = ({ match }) => {\n        const { query } = match.params\n        return <Search query={ query }/>\n    }\n\n    getMovie = ({ match }) => {\n        const { id } = match.params\n        return <Movie  id={ id }/>\n    }\n\n    renderPreloader = () => {\n        if (this.props.loading) return <Preloader isFixed/>\n    }\n}\n\nexport default connect(state => ({\n    query: state.movies.query,\n    loading: state.movies.loading\n}))(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { actions } from './../constants'\n// eslint-disable-next-line\nimport { Map, Record } from 'immutable'\nimport { objToMap } from './../helpers'\nimport { modes } from './../constants'\n\nconst ReducerState = Record({\n    results: [],\n    total_pages: 1,\n    page: 1,\n    total_results: 0,\n    loading: false,\n    loadingMore: false,\n    mode: modes.POPULAR,\n    query: '',\n    lastQuery: '',\n    movie: {},\n    credits: {}\n})\n\nexport default (state = new ReducerState(), action) => {\n    const { type, payload, response } = action\n\n    switch (type) {\n        case actions.LOAD_MOVIES + actions.START:\n            return state.set('loading', true)\n\n        case actions.LOAD_MOVIES + actions.SUCCESS:\n            return objToMap(response, ReducerState)\n                    .set('query', payload.query)\n                    .set('lastQuery', payload.query)\n                    .set('mode', payload.mode)\n                    .set('loading', false)\n\n        case actions.LOAD_NEXT_PAGE + actions.START:\n            return state.set('loadingMore', true)\n\n        case actions.LOAD_NEXT_PAGE + actions.SUCCESS:\n            return state\n                    .set('page', payload.page)\n                    .set('results', [...state.results, ...response.results])\n                    .set('loadingMore', false)\n\n        case actions.SET_QUERY:\n            return state.set('query', payload.query)\n\n        case actions.LOAD_MOVIE + actions.START:\n            return state.set('loading', true)\n\n        case actions.LOAD_MOVIE + actions.SUCCESS:\n            return state\n                    .set('movie', response)\n                    .set('total_results', 1)\n                    .set('loading', false)\n\n        case actions.LOAD_CREDITS + actions.START:\n            return state.set('loading', true)\n\n        case actions.LOAD_CREDITS + actions.SUCCESS:\n            return state\n                    .set('credits', response)\n                    .set('loading', false)\n\n        default:\n            return state\n    }\n}\n","import { actions } from './../constants'\n// eslint-disable-next-line\nimport { Map, Record } from 'immutable'\nimport { objToMap } from './../helpers'\n\nconst GenreRecord = Record({\n    genres: []\n})\n\nexport default (state = new GenreRecord(), action) => {\n    const { type, response } = action\n\n    switch (type) {\n        case actions.LOAD_GENRES + actions.SUCCESS:\n            return objToMap(response, GenreRecord)\n\n        default:\n            return state\n    }\n}\n","import { actions } from './../constants'\n// eslint-disable-next-line\nimport { Map, Record } from 'immutable'\n\nconst GenreRecord = Record({\n    isGalleryModal: false,\n    parameter: null\n})\n\nexport default (state = new GenreRecord(), action) => {\n    const { type, payload } = action\n\n    switch (type) {\n        case actions.TOGGLE_MODAL:\n            return state\n                    .set(`is${payload.name}`, payload.action)\n                    .set('parameter', payload.parameter)\n\n        default:\n            return state\n    }\n}\n","import { combineReducers } from 'redux'\nimport movies from './movies'\nimport genres from './genres'\nimport modals from './modals'\n\nexport default combineReducers({\n    movies,\n    genres,\n    modals\n})\n","import { createStore, applyMiddleware } from 'redux'\nimport reducer from '../reducer'\nimport api from '../middlewares/api'\n\nconst enhancer = applyMiddleware(api)\n\nconst store = createStore(reducer, {}, enhancer)\n\nwindow.store = store\n\nexport default store\n","import { actions } from './../constants'\n\nexport default store => next => action => {\n    const { callAPI, type, ...rest } = action\n    if (!callAPI) return next(action)\n\n    next({\n        ...rest,\n        type: type + actions.START\n    })\n\n    setTimeout(() => {\n        fetch(callAPI)\n            .then(response => response.json())\n            .then(response => next({...rest, type: type + actions.SUCCESS, response}))\n            .catch(err => next({...rest, type: type + actions.ERR, err}))\n    }, 700)\n}\n","// eslint-disable-next-line\nimport React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nclass ScrollToTop extends Component {\n    componentDidUpdate(prevProps) {\n        if (this.props.location.pathname !== prevProps.location.pathname) {\n            window.scrollTo(0, 0)\n        }\n    }\n\n    render() {\n        return this.props.children\n    }\n}\n\nexport default withRouter(ScrollToTop)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/styles.sass'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n// eslint-disable-next-line\nimport store from './store'\nimport { Provider } from 'react-redux'\nimport { HashRouter as Router } from 'react-router-dom'\nimport ScrollToTop from './ScrollToTop'\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <ScrollToTop>\n                <App />\n            </ScrollToTop>\n        </Router>\n    </Provider>,\n    document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}