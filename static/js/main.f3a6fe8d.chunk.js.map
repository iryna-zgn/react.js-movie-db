{"version":3,"sources":["constants.js","components/Logo/index.js","paths.js","ac/index.js","components/NoResults/index.js","components/SearchForm/index.js","components/SocLinks/index.js","components/Header/index.js","components/Stars/index.js","helpers.js","components/Movie/index.js","components/Preloader/index.js","components/LoadMore/index.js","components/MoviesList/index.js","pages/Home/index.js","pages/Search/index.js","components/Cast/index.js","components/Backdrops/index.js","components/MovieDetails/index.js","pages/Movie/index.js","components/Footer/index.js","App.js","serviceWorker.js","reducer/movies.js","reducer/genres.js","reducer/index.js","store/index.js","middlewares/api.js","ScrollToTop.js","index.js"],"names":["modes","POPULAR","SEARCH","classes","IS_FOCUS","IS_FIXED","IS_SMALL","actions","LOAD_MOVIES","LOAD_MOVIE","LOAD_CREDITS","LOAD_GENRES","LOAD_NEXT_PAGE","SET_QUERY","START","SUCCESS","ERR","Logo","props","className","isSmall","concat","react_default","a","createElement","href","link","title","target","isTargetBlank","rel","text","BASE","KEY","URL_POPULAR","URL_SEARCH","URL_IMG","URL_GENRES","URL_MOVIE","RHO","BLOG","MOVIES","socLinks","name","url","isActive","getUrl","mode","query","page","loadMovies","arguments","length","undefined","type","payload","callAPI","loadGenres","NoResults","react_router_dom","to","SearchForm","state","isFocus","handleChange","e","_this","setQuery","value","handleSubmit","_this$props","lastQuery","preventDefault","history","push","addFocus","setState","removeFocus","classNameInput","this","onSubmit","placeholder","onChange","onFocus","onBlur","renderMsg","total_results","Component","withRouter","connect","movies","renderItems","links","map","item","key","SocLinks","Header","components_SearchForm","Stars","renderFilledStars","evaluation","stars","i","getStarCount","star","index","Math","round","count","objToMap","obj","DataRecord","Map","Object","keys","reduce","acc","set","getImg","img","separateByCommas","arr","el","getYear","date","slice","formatNumber","number","symbol","toString","replace","formatTime","h","floor","min","Movie","getGenres","ids","genres","currentGenres","Set","forEach","id","genre","add","toConsumableArray","renderGenres","movie","style","backgroundImage","poster_path","src","alt","genre_ids","release_date","Stars_Stars","vote_average","vote_count","WebkitBoxOrient","overview","Preloader","isFixed","LoadMore","handleClickMore","loadNextPage","loadingMore","onClick","MoviesList","react_transition_group","classNames","timeout","appear","enter","exit","Movie_Movie","renderLoadMore","_this$props2","pages","components_LoadMore","results","total_pages","Home","components_MoviesList","Search","nextProps","renderCast","cast","cast_id","profile_path","character","Cast","renderBackdrops","images","backdrops","file_path","Backdrops","MovieDetails","getDetails","data","val","runtime","original_language","budget","getCrew","m","job","has","get","entries","getDataByName","renderRows","renderHomeLink","credits","production_countries","production_companies","crew","homepage","components_MovieDetails","loadMovie","loadCredits","Footer","Date","getFullYear","App","getSearch","_ref","match","params","pages_Search","getMovie","_ref2","pages_Movie","renderPreloader","loading","react_router","exact","path","component","render","Boolean","window","location","hostname","ReducerState","Record","GenreRecord","combineReducers","action","response","enhancer","applyMiddleware","store","next","rest","objectWithoutProperties","objectSpread","setTimeout","fetch","then","json","catch","err","createStore","reducer","ScrollToTop","prevProps","pathname","scrollTo","children","ReactDOM","es","src_ScrollToTop","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f3a6fe8d.chunk.js","sourcesContent":["export const modes = {\n    POPULAR: 'popular',\n    SEARCH: 'search'\n}\n\nexport const classes = {\n    IS_FOCUS: 'is-focus',\n    IS_FIXED: 'is-fixed',\n    IS_SMALL: 'is-small'\n}\n\nexport const actions = {\n    LOAD_MOVIES: 'LOAD_MOVIES',\n    LOAD_MOVIE: 'LOAD_MOVIE',\n    LOAD_CREDITS: 'LOAD_CREDITS',\n    LOAD_GENRES: 'LOAD_GENRES',\n    LOAD_NEXT_PAGE: 'LOAD_NEXT_PAGE',\n    SET_QUERY: 'SET_QUERY',\n    START: 'START',\n    SUCCESS: 'SUCCESS',\n    ERR: 'ERR'\n}\n","import React from 'react'\nimport { classes } from './../../constants'\n\nexport default function Logo(props) {\n    let className= 'logo'\n    if (props.isSmall) className += ` ${classes.IS_SMALL}`\n\n  return (\n      <div className={ className }>\n          <a\n              href={ props.link || '#'}\n              title={ props.title }\n              target={ props.isTargetBlank ? '_blank' :  '_self'}\n              className='logo__link'\n              rel='noopener noreferrer'>\n              <span className='logo__main'>rho</span>\n              <span className='logo__text'>{ props.text }</span>\n          </a>\n  </div>\n  )\n}\n","const BASE = 'https://api.themoviedb.org'\nexport const KEY = 'ac710db081029f2383b7c329b25a753a'\nexport const URL_POPULAR = `${BASE}/3/movie/popular?api_key=${KEY}`\nexport const URL_SEARCH = `${BASE}/3/search/movie?api_key=${KEY}`\nexport const URL_IMG = `https://image.tmdb.org/t/p/w500`\nexport const URL_GENRES = `${BASE}/3/genre/list?api_key=${KEY}`\nexport const URL_MOVIE = `${BASE}/3/movie/`\n\nexport const RHO = {\n    BLOG: 'https://iryna-zgn.github.io/vue.js-blog',\n    MOVIES: 'https://iryna-zgn.github.io/react.js-movie-db'\n}\n\nexport const socLinks = [\n    {\n        name: 'github',\n        url: 'https://github.com/iryna-zgn',\n        isActive: true\n    },\n    {\n        name: 'instagram',\n        url: '#',\n        isActive: false\n    },\n    {\n        name: 'facebook',\n        url: '#',\n        isActive: false\n    }\n]\n","import { actions } from './../constants'\nimport { URL_POPULAR, URL_GENRES, URL_SEARCH, URL_MOVIE, KEY } from './../paths'\nimport { modes } from './../constants'\n\nfunction getUrl(mode, query, page) {\n    return mode === modes.POPULAR\n        ? `${URL_POPULAR}&page=${page}`\n        : `${URL_SEARCH}&query=${query}&page=${page}`\n}\n\nexport function loadMovies(mode = modes.POPULAR, query = '', page = 1) {\n    return {\n        type: actions.LOAD_MOVIES,\n        payload: { mode, query },\n        callAPI: getUrl(mode, query, page)\n    }\n}\n\nexport function loadMovie(id) {\n    return {\n        type: actions.LOAD_MOVIE,\n        callAPI: `${URL_MOVIE}${id}?api_key=${KEY}&append_to_response=images`\n    }\n}\n\nexport function loadCredits(id) {\n    return {\n        type: actions.LOAD_CREDITS,\n        callAPI: `${URL_MOVIE}${id}/credits?api_key=${KEY}`\n    }\n}\n\nexport function loadNextPage(mode = modes.POPULAR, query = '', page = 1) {\n    return {\n        type: actions.LOAD_NEXT_PAGE,\n        payload: { page },\n        callAPI: getUrl(mode, query, page)\n    }\n}\n\nexport function loadGenres() {\n    return {\n        type: actions.LOAD_GENRES,\n        callAPI: URL_GENRES\n    }\n}\n\nexport function setQuery(query) {\n    return {\n        type: actions.SET_QUERY,\n        payload: { query }\n    }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default function () {\n    return (\n        <div className='no-results'>\n            <div className='no-results__msg'>No results :(</div>\n            <Link to={'/'}\n                  className='no-results__link'>\n                Popular movies\n            </Link>\n        </div>\n    )\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { loadMovies, setQuery } from './../../ac'\nimport { classes, modes } from './../../constants'\nimport { withRouter } from 'react-router-dom'\nimport NoResults from './../../components/NoResults'\n\nclass SearchForm extends Component {\n    static propTypes = {\n        query: PropTypes.string,\n        lastQuery: PropTypes.string,\n        setQuery: PropTypes.func,\n        loadMovies: PropTypes.func,\n        total_results: PropTypes.number\n    }\n\n    state = {\n        isFocus: false\n    }\n\n    render() {\n        let classNameInput = 'search__field'\n        if (this.state.isFocus) classNameInput += ` ${classes.IS_FOCUS}`\n\n        return (\n            <div className='search'>\n                <form\n                    className='search__form'\n                    onSubmit={ this.handleSubmit }>\n                    <div\n                        className={ classNameInput }>\n                        <input\n                            value={ this.props.query }\n                            placeholder='Search for a movie'\n                            type='text'\n                            onChange={ this.handleChange }\n                            onFocus={ this.addFocus }\n                            onBlur={ this.removeFocus }/>\n                    </div>\n                    <button className='search__btn icon-search'/>\n                </form>\n                { this.renderMsg() }\n            </div>\n        )\n    }\n\n    handleChange = e => this.props.setQuery(e.target.value)\n\n    handleSubmit = e => {\n        const { query, lastQuery } = this.props\n\n        e.preventDefault()\n\n        if (query && query !== lastQuery) {\n            this.props.loadMovies(modes.SEARCH, query)\n            this.props.history.push(`/search/${query}`)\n        }\n    }\n\n    addFocus = () => {\n        this.setState({\n            isFocus: true\n        })\n    }\n\n    removeFocus = () => {\n        this.setState({\n            isFocus: false\n        })\n    }\n\n    renderMsg() {\n        if (!this.props.total_results) {\n            return <NoResults/>\n        }\n    }\n}\n\nexport default withRouter(connect(state => ({\n    query: state.movies.query,\n    lastQuery: state.movies.lastQuery,\n    total_results: state.movies.total_results\n}), {\n    loadMovies,\n    setQuery\n})(SearchForm))\n","import React from 'react'\nimport { socLinks as links } from './../../paths'\n\nconst renderItems = () => {\n  return links.map(item => {\n    if (!item.isActive) return null\n    return (\n      <li\n          key={ item.name }\n          className='soc-links__item'>\n        <a\n            href={ item.url }\n            title={ item.name }\n            className='soc-links__link'\n            target='_blank'\n            rel='noopener noreferrer'>\n          <span className={ `soc-links__icon icon-${item.name}` }/>\n        </a>\n      </li>\n    )\n  })\n}\n\nexport default function SocLinks() {\n  return (\n      <ul className='soc-links'>{ renderItems() }</ul>\n  )\n}\n","import React from 'react'\nimport Logo from './../Logo'\nimport SearchForm from './../SearchForm'\nimport SocLinks from './../../components/SocLinks'\nimport { RHO } from './../../paths'\n\nexport default function Header() {\n    return (\n        <header className='header'>\n            <div className='header__main'>\n                <Logo\n                    text='movies'\n                    link={ RHO.MOVIES} />\n                <SearchForm/>\n            </div>\n            <div className='header__links'>\n                <SocLinks/>\n                <Logo\n                    link={ RHO.BLOG }\n                    text='blog'\n                    isSmall\n                    isTargetBlank\n                    title='rho blog'/>\n            </div>\n        </header>\n    )\n}\n","import React, { Component } from 'react'\n\nexport default class Stars extends Component {\n    render() {\n        if (!this.props.evaluation) return null\n\n        return (\n            <div className='evaluation'>\n                <div className='evaluation__stars'>\n                    { this.renderFilledStars() }\n                </div>\n                <span>{ this.props.count }</span>\n            </div>\n        )\n    }\n\n    renderFilledStars = () => {\n        const { evaluation } = this.props\n        const stars = []\n\n        for (let i = 0; i < this.getStarCount(evaluation); i++) {\n            stars.push(<span className='icon-star-filled'></span>)\n        }\n\n        for (let i = 0; i < 5 - this.getStarCount(evaluation); i++) {\n            stars.push(<span className='icon-star'></span>)\n        }\n\n        return stars.map((star, index) => {\n            return (\n                <div key = { index } className='evaluation__stars-item'>{ star }</div>\n            )\n        })\n    }\n\n    getStarCount = evaluation => Math.round(evaluation / 2)\n}\n","import { Map } from 'immutable'\nimport { URL_IMG } from './paths'\n\nexport function objToMap(obj, DataRecord = Map) {\n    return Object.keys(obj).reduce((acc, key) => acc.set(key, obj[key]), new DataRecord())\n}\n\nexport function getImg(img) {\n    return img ? `${URL_IMG}${img}` : 'static/images/rho_light.jpg'\n}\n\nexport function separateByCommas(arr) {\n    if (arr) return arr.reduce((acc, el, index) => acc + (index ? ', ' : '') + el.name , '')\n}\n\nexport function getYear(date){\n    if (date) return date.slice(0, 4)\n}\n\nexport function formatNumber(number, symbol='') {\n    if (number) return symbol + number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n}\n\nexport function formatTime(number) {\n    if (number) {\n        const h = Math.floor(number / 60)\n        const min = number % 60\n\n        return (h ? `${h} h` : '') + (min ? ` ${min} min` : '')\n    }\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Stars from './../../components/Stars'\nimport { Link } from 'react-router-dom'\nimport { getImg, separateByCommas, getYear } from '../../helpers'\n\nexport default class Movie extends Component {\n    static propTypes = {\n        movie: PropTypes.shape({\n            poster_path: PropTypes.string,\n            title: PropTypes.string,\n            genre_ids: PropTypes.array,\n            release_date: PropTypes.string,\n            overview: PropTypes.string\n        }),\n        genres: PropTypes.array\n    }\n\n    render() {\n        const { movie } = this.props\n\n        return (\n            <div className='movie'>\n                <Link to={`/movie/${movie.id}`}\n                    className='movie__img'\n                    style={{ backgroundImage: `url(${getImg(movie.poster_path)})` }}>\n                    <img src='static/images/rho_light.jpg' alt='' className='u-dummy'/>\n                </Link>\n                <div>\n                    <Link to={`/movie/${movie.id}`}\n                          className='movie__title t2'>\n                        { movie.title }\n                    </Link>\n                    <div className='movie__prop'>\n                        { this.renderGenres(movie.genre_ids) }\n                    </div>\n                    <div className='movie__prop'>\n                        { getYear(movie.release_date) }\n                    </div>\n                    <Stars\n                        evaluation={ movie.vote_average }\n                        count={ movie.vote_count }/>\n                    <div\n                        className='movie__desc'\n                        style={{ WebkitBoxOrient: 'vertical' }}>\n                        { movie.overview }\n                    </div>\n                    <Link to={`/movie/${movie.id}`}\n                          className='movie__link'>\n                        Read more\n                    </Link>\n                </div>\n            </div>\n        )\n    }\n\n    getGenres = ids => {\n        const { genres } = this.props\n        const currentGenres = new Set()\n\n        ids.forEach(id => {\n            genres.forEach(genre => {\n                if (genre.id === id) {\n                    currentGenres.add(genre)\n                }\n            })\n        })\n\n        return [...currentGenres]\n    }\n\n    renderGenres = ids => separateByCommas(this.getGenres(ids))\n}\n","import React from 'react'\nimport { classes } from './../../constants'\n\nexport default function Preloader(props) {\n  let className = 'preloader'\n  if (props.isFixed) className += ` ${classes.IS_FIXED}`\n\n  return (\n      <div className={ className }>\n        <div className='preloader__inner'/>\n      </div>\n  )\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Preloader from './../../components/Preloader'\nimport { connect } from 'react-redux'\nimport { loadNextPage } from './../../ac'\n\n\nclass LoadMore extends Component {\n    static propTypes = {\n        page: PropTypes.number.isRequired,\n        loadNextPage: PropTypes.func.isRequired,\n        loadingMore: PropTypes.bool,\n        mode: PropTypes.string,\n        query: PropTypes.string\n    }\n\n    render() {\n        return (\n            <div className='load-more'>\n                {\n                    this.props.loadingMore\n                        ? <div\n                        className='load-more__preloader'>\n                        <Preloader />\n                    </div>\n                        : <div\n                        onClick={ this.handleClickMore }\n                        className='load-more__link'>\n                        Load more\n                    </div>\n                }\n            </div>\n        )\n    }\n\n    handleClickMore = () => {\n        const { page, mode, query } = this.props\n\n        this.props.loadNextPage(mode, query, page + 1)\n    }\n}\n\nexport default connect(state => ({\n    page: state.movies.page,\n    loadingMore: state.movies.loadingMore,\n    mode: state.movies.mode,\n    query: state.movies.query\n}), {\n    loadNextPage\n})(LoadMore)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Movie from './../Movie'\nimport LoadMore from './../LoadMore'\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\nimport { connect } from 'react-redux'\n\n\nclass MoviesList extends Component {\n    static propTypes = {\n        movies: PropTypes.array,\n        genres: PropTypes.array,\n        pages: PropTypes.number,\n        page: PropTypes.number,\n        loadingMore: PropTypes.bool,\n        mode: PropTypes.string,\n        query: PropTypes.string\n    }\n\n    render() {\n        return (\n            <div>\n                <div className='movies-list'>\n                    <TransitionGroup>\n                        { this.renderItems() }\n                    </TransitionGroup>\n                </div>\n                { this.renderLoadMore() }\n            </div>\n        )\n    }\n\n    renderItems = () => {\n        const { movies, genres } = this.props\n\n        return movies.map(movie => {\n            return (\n                <CSSTransition\n                    key={ movie.id }\n                    classNames='fade'\n                    timeout={{ appear: 300, enter: 300, exit: 300 }}\n                    appear>\n                    <div className='movies-list__item'>\n                        <Movie\n                            movie={ movie }\n                            genres={ genres }/>\n                    </div>\n                </CSSTransition>\n            )\n        })\n    }\n\n    renderLoadMore = () => {\n        const { pages, page } = this.props\n\n        if (pages > 1 && page !== pages ) return <LoadMore/>\n    }\n}\n\nexport default connect(state => ({\n    movies: state.movies.results,\n    genres: state.genres.genres,\n    pages: state.movies.total_pages,\n    page: state.movies.page,\n    loadingMore: state.movies.loadingMore,\n    mode: state.movies.mode,\n    query: state.movies.query\n}))(MoviesList)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport MoviesList from './../../components/MoviesList'\nimport { loadMovies, loadGenres } from './../../ac'\nimport { connect } from 'react-redux'\n\nclass Home extends Component{\n    static propTypes = {\n        loadMovies: PropTypes.func,\n        loadGenres: PropTypes.func\n    }\n\n    render() {\n        return <MoviesList />\n    }\n\n    componentDidMount() {\n        this.props.loadMovies()\n        this.props.loadGenres()\n    }\n}\n\n\nexport default connect(null, {\n    loadMovies,\n    loadGenres\n})(Home)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport MoviesList from './../../components/MoviesList'\nimport { loadMovies, loadGenres } from './../../ac'\nimport { connect } from 'react-redux'\nimport { modes } from './../../constants'\n\nclass Search extends Component{\n    static propTypes = {\n        query: PropTypes.string,\n        loadMovies: PropTypes.func,\n        loadGenres: PropTypes.func\n    }\n\n    render() {\n        return <MoviesList query={ this.props.query }/>\n    }\n\n    componentDidMount() {\n        this.props.loadMovies(modes.SEARCH, this.props.query)\n        this.props.loadGenres()\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.query !== this.props.query) {\n            this.props.loadMovies(modes.SEARCH, nextProps.query)\n        }\n    }\n}\n\nexport default connect(null, {\n    loadMovies,\n    loadGenres\n})(Search)\n","import React from 'react'\nimport { getImg } from './../../helpers'\n\nconst renderCast = cast => {\n    if (!cast) return null\n\n    return cast.slice(0, 6).map(el => {\n        return (\n            <div\n                key={ el.cast_id }\n                className='cast__item'>\n                <div\n                    className='cast__img'\n                    style={{ backgroundImage: `url(${getImg(el.profile_path)})` }}>\n                    <img src='static/images/rho_light.jpg' alt='' className='u-dummy'/>\n                </div>\n                <div className='t4'>{ el.name }</div>\n                <div className='cast__desc'>{ el.character }</div>\n            </div>\n        )\n    })\n}\n\nexport default function Cast(props) {\n    if (!props.cast.length) return null\n\n    return (\n        <div className='cast'>\n            <h2 className='t2'>Cast</h2>\n            <div className='cast__list'>\n                { renderCast(props.cast) }\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { getImg } from './../../helpers'\n\nconst renderBackdrops = images => {\n    if (!images) return null\n\n    return images.backdrops.map(el => {\n        return (\n            <img key={el.file_path} src={ getImg(el.file_path) } alt=''/>\n        )\n    })\n}\n\nexport default function Backdrops(props) {\n    if (!props.images.backdrops.length) return null\n\n    return (\n        <div className='backdrops'>\n            <h2 className='t2'>Backdrops</h2>\n            <div className='backdrops__gallery u-scrollbar-x'>\n                { renderBackdrops(props.images) }\n            </div>\n        </div>\n    )\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { getImg, separateByCommas, getYear, formatNumber, formatTime  } from '../../helpers'\nimport Stars from './../../components/Stars'\nimport Cast from './../../components/Cast'\nimport Backdrops from './../../components/Backdrops'\n\nclass MovieDetails extends Component {\n    static propTypes = {\n        id: PropTypes.string,\n        movie: PropTypes.object,\n        credits: PropTypes.object\n    }\n\n    render() {\n        const { movie, credits } = this.props\n\n        return (\n            <div className='movie-details'>\n                <div className='movie-details__parts'>\n                    <div className='movie-details__const'>\n                        <img src={ getImg(movie.poster_path) } alt=''/>\n                    </div>\n                    <div className='movie-details__var'>\n                        <h1>{movie.title }</h1>\n                        <Stars\n                            evaluation={ movie.vote_average }\n                            count={ movie.vote_count }/>\n                        <table className='movie-details__props'>\n                            <tbody>\n                            { this.renderRows(this.getDetails(movie)) }\n                            { this.renderRows(this.getDataByName(movie.production_countries, 'Country')) }\n                            { this.renderRows(this.getDataByName(movie.production_companies, 'Production')) }\n                            { this.renderRows(this.getCrew(credits.crew)) }\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n                <div className='movie-details__desc'>\n                    <p>{ movie.overview }</p>\n                    { this.renderHomeLink(movie.homepage) }\n                </div>\n                { this.renderCast(credits.cast) }\n                { this.renderBackdrops(movie.images) }\n            </div>\n        )\n    }\n\n    getDetails = data => {\n        return [\n            {\n                key: 'Genre',\n                val: separateByCommas(data.genres)\n            },\n            {\n                key: 'Runtime',\n                val: formatTime(data.runtime)\n            },\n            {\n                key: 'Original language',\n                val: data.original_language\n            },\n            {\n                key: 'Release year',\n                val: getYear(data.release_date)\n            },\n            {\n                key: 'Budget',\n                val: formatNumber(data.budget, '$')\n            },\n        ]\n\n    }\n\n    getCrew = (data=[]) => {\n        const jobs = [\n            'Director',\n            'Producer',\n            'Screenplay',\n            'Writer',\n            'Music',\n            'Original Music Composer'\n        ]\n        const m = new Map()\n\n        jobs.forEach(job => {\n            data.forEach(el => {\n                if (el.job === job) {\n                    m.set(el.job, m.has(el.job) ? `${m.get(el.job)}, ${el.name}` : el.name)\n                }\n            })\n        })\n\n        return [...m.entries()].map(el => {\n            return {\n                key: el[0],\n                val: el[1]\n            }\n        })\n    }\n\n    getDataByName = (data=[], name='') => {\n        return [{\n            key: name,\n            val: separateByCommas(data)\n        }]\n    }\n\n    renderRows = data => {\n        return data.map((el, index) => {\n            if (!el.val) return null\n\n            return (\n                <tr key={ el.key + index }>\n                    <td>{ el.key }</td>\n                    <td>{ el.val }</td>\n                </tr>\n            )\n        })\n\n    }\n\n    renderHomeLink = url => {\n        if (!url) return null\n\n        return (\n            <a\n                href={ url }\n                className='movie-details__link'\n                target='_blank'\n                rel='noopener noreferrer'>\n                homepage\n            </a>\n        )\n    }\n\n    renderBackdrops = images => {\n        if (!this.props.movie.images) return null\n\n        return <Backdrops images={ images }/>\n    }\n\n    renderCast = cast => {\n        if (!this.props.credits.cast) return null\n\n        return <Cast cast={ cast }/>\n    }\n}\n\nexport default connect(state => ({\n    movie: state.movies.movie,\n    credits: state.movies.credits\n}))(MovieDetails)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport MovieDetails from './../../components/MovieDetails'\nimport { loadMovie, loadCredits } from './../../ac'\nimport { connect } from 'react-redux'\n\nclass Movie extends Component {\n    static propTypes = {\n        id: PropTypes.string,\n        loadMovie: PropTypes.func,\n        loadCredits: PropTypes.func\n    }\n\n    render() {\n        return <MovieDetails id={ this.props.id } />\n    }\n\n    componentDidMount() {\n        this.props.loadMovie(this.props.id)\n        this.props.loadCredits(this.props.id)\n    }\n}\n\nexport default connect(null, {\n    loadMovie,\n    loadCredits\n})(Movie)","import React from 'react'\n\nexport default function Footer() {\n    return (\n        <footer className='footer'>\n            <div className='footer__copyright'>\n                © { (new Date()).getFullYear() } Rho\n            </div>\n        </footer>\n    )\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Header from './components/Header'\nimport Home from './pages/Home'\nimport Search from './pages/Search'\nimport Movie from './pages/Movie'\nimport Footer from './components/Footer'\nimport Preloader from './components/Preloader'\nimport { connect } from 'react-redux'\nimport { Route, Switch } from 'react-router-dom'\n\nclass App extends Component {\n    static propTypes = {\n        query: PropTypes.string,\n        loading: PropTypes.bool\n    }\n\n    render() {\n        return (\n            <div className='container'>\n                <div>\n                    <Header/>\n                    <Switch>\n                        <Route exact path='/' component={ Home }/>\n                        <Route path='/search/:query' render={ this.getSearch }/>\n                        <Route path='/movie/:id' render={ this.getMovie }/>\n                    </Switch>\n                </div>\n                <Footer/>\n                { this.renderPreloader() }\n            </div>\n        )\n    }\n\n    getSearch = ({ match }) => {\n        const { query } = match.params\n        return <Search query={ query }/>\n    }\n\n    getMovie = ({ match }) => {\n        const { id } = match.params\n        return <Movie  id={ id }/>\n    }\n\n    renderPreloader = () => {\n        if (this.props.loading) return <Preloader isFixed/>\n    }\n}\n\nexport default connect(state => ({\n    query: state.movies.query,\n    loading: state.movies.loading\n}))(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { actions } from './../constants'\n// eslint-disable-next-line\nimport { Map, Record } from 'immutable'\nimport { objToMap } from './../helpers'\nimport { modes } from './../constants'\n\nconst ReducerState = Record({\n    results: [],\n    total_pages: 1,\n    page: 1,\n    total_results: 0,\n    loading: false,\n    loadingMore: false,\n    mode: modes.POPULAR,\n    query: '',\n    lastQuery: '',\n    movie: {},\n    credits: {}\n})\n\nexport default (state = new ReducerState(), action) => {\n    const { type, payload, response } = action\n\n    switch (type) {\n        case actions.LOAD_MOVIES + actions.START:\n            return state.set('loading', true)\n\n        case actions.LOAD_MOVIES + actions.SUCCESS:\n            return objToMap(response, ReducerState)\n                    .set('query', payload.query)\n                    .set('lastQuery', payload.query)\n                    .set('mode', payload.mode)\n                    .set('loading', false)\n\n        case actions.LOAD_NEXT_PAGE + actions.START:\n            return state.set('loadingMore', true)\n\n        case actions.LOAD_NEXT_PAGE + actions.SUCCESS:\n            return state\n                    .set('page', payload.page)\n                    .set('results', [...state.results, ...response.results])\n                    .set('loadingMore', false)\n\n        case actions.SET_QUERY:\n            return state.set('query', payload.query)\n\n        case actions.LOAD_MOVIE + actions.START:\n            return state.set('loading', true)\n\n        case actions.LOAD_MOVIE + actions.SUCCESS:\n            return state\n                    .set('movie', response)\n                    .set('total_results', 1)\n                    .set('loading', false)\n\n        case actions.LOAD_CREDITS + actions.START:\n            return state.set('loading', true)\n\n        case actions.LOAD_CREDITS + actions.SUCCESS:\n            return state\n                    .set('credits', response)\n                    .set('loading', false)\n\n        default:\n            return state\n    }\n}\n","import { actions } from './../constants'\n// eslint-disable-next-line\nimport { Map, Record } from 'immutable'\nimport { objToMap } from './../helpers'\n\nconst GenreRecord = Record({\n    genres: []\n})\n\nexport default (state = new GenreRecord(), action) => {\n    const { type, response } = action\n\n    switch (type) {\n        case actions.LOAD_GENRES + actions.SUCCESS:\n            return objToMap(response, GenreRecord)\n\n        default:\n            return state\n    }\n}\n","import { combineReducers } from 'redux'\nimport movies from './movies'\nimport genres from './genres'\n\nexport default combineReducers({\n    movies,\n    genres\n})\n","import { createStore, applyMiddleware } from 'redux'\nimport reducer from '../reducer'\nimport api from '../middlewares/api'\n\nconst enhancer = applyMiddleware(api)\n\nconst store = createStore(reducer, {}, enhancer)\n\nwindow.store = store\n\nexport default store\n","import { actions } from './../constants'\n\nexport default store => next => action => {\n    const { callAPI, type, ...rest } = action\n    if (!callAPI) return next(action)\n\n    next({\n        ...rest,\n        type: type + actions.START\n    })\n\n    setTimeout(() => {\n        fetch(callAPI)\n            .then(response => response.json())\n            .then(response => next({...rest, type: type + actions.SUCCESS, response}))\n            .catch(err => next({...rest, type: type + actions.ERR, err}))\n    }, 700)\n}\n","// eslint-disable-next-line\nimport React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nclass ScrollToTop extends Component {\n    componentDidUpdate(prevProps) {\n        if (this.props.location.pathname !== prevProps.location.pathname) {\n            window.scrollTo(0, 0)\n        }\n    }\n\n    render() {\n        return this.props.children\n    }\n}\n\nexport default withRouter(ScrollToTop)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/styles.sass'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n// eslint-disable-next-line\nimport store from './store'\nimport { Provider } from 'react-redux'\nimport { HashRouter as Router } from 'react-router-dom'\nimport ScrollToTop from './ScrollToTop'\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <ScrollToTop>\n                <App />\n            </ScrollToTop>\n        </Router>\n    </Provider>,\n    document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}