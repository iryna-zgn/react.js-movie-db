{"version":3,"sources":["constants.js","components/Logo/index.js","paths.js","components/SocLinks/index.js","components/Header/index.js","ac/index.js","components/SearchForm/index.js","components/Stars/index.js","components/Movie/index.js","components/Preloader/index.js","components/LoadMore/index.js","components/MoviesList/index.js","components/MoviePage/index.js","components/Footer/index.js","App.js","serviceWorker.js","helpers.js","reducer/movies.js","reducer/genres.js","reducer/index.js","store/index.js","middlewares/api.js","index.js"],"names":["modes","POPULAR","SEARCH","classes","IS_FOCUS","IS_FIXED","IS_SMALL","actions","LOAD_MOVIES","LOAD_MOVIE","LOAD_GENRES","LOAD_NEXT_PAGE","SET_QUERY","START","SUCCESS","ERR","logo","props","className","isSmall","concat","react_default","a","createElement","href","link","title","target","isTargetBlank","rel","text","BASE","KEY","URL_POPULAR","URL_SEARCH","URL_IMG","URL_GENRES","URL_MOVIE","RHO","BLOG","MOVIES","socLinks","name","url","isActive","renderItems","links","map","item","key","header","SocLinks_socLinks","getUrl","mode","query","page","loadMovies","arguments","length","undefined","type","payload","callAPI","SearchForm","state","isFocus","handleChange","e","_this","setQuery","value","handleSubmit","_this$props","lastQuery","preventDefault","addFocus","setState","removeFocus","loadPopular","renderSearchMsg","total_results","onClick","classNameInput","this","onSubmit","placeholder","onChange","onFocus","onBlur","Component","connect","movies","Stars","renderFilledStars","stars","i","count","push","star","index","Movie","getYear","date","slice","getImg","img","getGenres","ids","genres","currentGenres","Set","forEach","id","genre","add","Object","toConsumableArray","getStarCount","vote","Math","round","renderGenres","toLowerCase","movie","react_router_dom","to","style","backgroundImage","poster_path","src","alt","genre_ids","release_date","Stars_Stars","vote_average","vote_count","overview","loadGenres","preloader","isFixed","LoadMore","handleClickMore","loadNextPage","loadingMore","MoviesList","react_transition_group","classNames","timeout","appear","enter","exit","components_Movie","renderLoadMore","_this$props2","pages","components_LoadMore","components_SearchForm","results","total_pages","MoviePage","renderImages","images","backdrops","el","file_path","homepage","budget","original_language","original_title","popularity","status","video","loadMovie","footer","Date","getFullYear","App","getMoviePage","_ref","match","params","components_MoviePage","renderPreloader","loading","react_router","exact","path","component","render","Boolean","window","location","hostname","objToMap","obj","DataRecord","Map","keys","reduce","acc","set","ReducerState","Record","GenreRecord","combineReducers","action","response","enhancer","applyMiddleware","store","next","rest","objectWithoutProperties","objectSpread","setTimeout","fetch","then","json","catch","err","createStore","reducer","ReactDOM","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f4f221cd.chunk.js","sourcesContent":["export const modes = {\n    POPULAR: 'popular',\n    SEARCH: 'search'\n}\n\nexport const classes = {\n    IS_FOCUS: 'is-focus',\n    IS_FIXED: 'is-fixed',\n    IS_SMALL: 'is-small'\n}\n\nexport const actions = {\n    LOAD_MOVIES: 'LOAD_MOVIES',\n    LOAD_MOVIE: 'LOAD_MOVIE',\n    LOAD_GENRES: 'LOAD_GENRES',\n    LOAD_NEXT_PAGE: 'LOAD_NEXT_PAGE',\n    SET_QUERY: 'SET_QUERY',\n    START: 'START',\n    SUCCESS: 'SUCCESS',\n    ERR: 'ERR'\n}\n","import React from 'react'\nimport { classes } from './../../constants'\n\nexport default function logo(props) {\n    let className= 'logo'\n    if (props.isSmall) className += ` ${classes.IS_SMALL}`\n\n  return (\n      <div className={ className }>\n          <a\n              href={ props.link || '#'}\n              title={ props.title }\n              target={ props.isTargetBlank ? '_blank' :  '_self'}\n              className='logo__link'\n              rel='noopener noreferrer'>\n              <span className='logo__main'>rho</span>\n              <span className='logo__text'>{ props.text }</span>\n          </a>\n  </div>\n  )\n}\n","const BASE = 'https://api.themoviedb.org'\nexport const KEY = 'ac710db081029f2383b7c329b25a753a'\nexport const URL_POPULAR = `${BASE}/3/movie/popular?api_key=${KEY}`\nexport const URL_SEARCH = `${BASE}/3/search/movie?api_key=${KEY}`\nexport const URL_IMG = `https://image.tmdb.org/t/p/w500`\nexport const URL_GENRES = `${BASE}/3/genre/list?api_key=${KEY}`\nexport const URL_MOVIE = `${BASE}/3/movie/`\n\nexport const RHO = {\n    BLOG: 'https://iryna-zgn.github.io/vue.js-blog',\n    MOVIES: 'https://iryna-zgn.github.io/react.js-movie-db'\n}\n\nexport const socLinks = [\n    {\n        name: 'github',\n        url: 'https://github.com/iryna-zgn',\n        isActive: true\n    },\n    {\n        name: 'instagram',\n        url: '#',\n        isActive: false\n    },\n    {\n        name: 'facebook',\n        url: 'https://www.facebook.com/ira.dmytruk',\n        isActive: true\n    }\n]\n","import React from 'react'\nimport { socLinks as links } from './../../paths'\n\nconst renderItems = () => {\n  return links.map(item => {\n    if (item.isActive) {\n      return <li\n          key={ item.name }\n          className='soc-links__item'>\n          <a\n              href={ item.url }\n              title={ item.name }\n              className='soc-links__link'\n              target='_blank'\n              rel='noopener noreferrer'>\n            <span className={ `soc-links__icon icon-${item.name}` }/>\n          </a>\n      </li>\n    } else {\n      return null\n    }\n  })\n}\n\nexport default function socLinks() {\n  return (\n      <ul className='soc-links'>{ renderItems() }</ul>\n  )\n}\n","import React from 'react'\nimport Logo from './../Logo'\nimport SocLinks from './../../components/SocLinks'\nimport { RHO } from './../../paths'\n\nexport default function header() {\n    return (\n        <header className='header'>\n            <Logo\n                text='movies'\n                link={ RHO.MOVIES} />\n            <div className='header__inline'>\n                <SocLinks/>\n                <Logo\n                    link={ RHO.BLOG }\n                    text='blog'\n                    isSmall\n                    isTargetBlank\n                    title='rho blog'/>\n            </div>\n        </header>\n    )\n}\n","import { actions } from './../constants'\nimport { URL_POPULAR, URL_GENRES, URL_SEARCH, URL_MOVIE, KEY } from './../paths'\nimport { modes } from './../constants'\n\nfunction getUrl(mode, query, page) {\n    return mode === modes.POPULAR\n        ? `${URL_POPULAR}&page=${page}`\n        : `${URL_SEARCH}&query=${query}&page=${page}`\n}\n\nexport function loadMovies(mode = modes.POPULAR, query = '', page = 1) {\n    return {\n        type: actions.LOAD_MOVIES,\n        payload: { mode, query },\n        callAPI: getUrl(mode, query, page)\n    }\n}\n\nexport function loadMovie(id) {\n    return {\n        type: actions.LOAD_MOVIE,\n        callAPI: `${URL_MOVIE}${id}?api_key=${KEY}&append_to_response=images`\n    }\n}\n\nexport function loadNextPage(mode = modes.POPULAR, query = '', page = 1) {\n    return {\n        type: actions.LOAD_NEXT_PAGE,\n        payload: { page },\n        callAPI: getUrl(mode, query, page)\n    }\n}\n\nexport function loadGenres() {\n    return {\n        type: actions.LOAD_GENRES,\n        callAPI: URL_GENRES\n    }\n}\n\nexport function setQuery(query) {\n    return {\n        type: actions.SET_QUERY,\n        payload: { query }\n    }\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { loadMovies, setQuery } from './../../ac'\nimport { classes, modes } from './../../constants'\n\nclass SearchForm extends Component {\n    static propTypes = {\n        query: PropTypes.string,\n        lastQuery: PropTypes.string,\n        setQuery: PropTypes.func,\n        loadMovies: PropTypes.func\n    }\n\n    state = {\n        isFocus: false\n    }\n\n    handleChange = e => this.props.setQuery(e.target.value)\n\n    handleSubmit = e => {\n        const { query, lastQuery } = this.props\n\n        e.preventDefault()\n        if (query && query !== lastQuery) this.props.loadMovies(modes.SEARCH, query)\n    }\n\n    addFocus = () => {\n        this.setState({\n            isFocus: true\n        })\n    }\n\n    removeFocus = () => {\n        this.setState({\n            isFocus: false\n        })\n    }\n\n    loadPopular = () => {\n        this.props.loadMovies()\n    }\n\n    renderSearchMsg = () => {\n        if (!this.props.total_results) {\n            return <div>\n                <div className='search__msg'>No results :(</div>\n                <div\n                    onClick={ this.loadPopular }\n                    className='search__link'>\n                    Popular movies\n                </div>\n            </div>\n        }\n    }\n\n    render() {\n        let classNameInput = 'search__field'\n        if (this.state.isFocus) classNameInput += ` ${classes.IS_FOCUS}`\n\n        return (\n            <div className='search'>\n                <form\n                    className='search__form'\n                    onSubmit={ this.handleSubmit }>\n                    <div\n                        className={ classNameInput }>\n                        <input\n                            value={ this.props.query }\n                            placeholder='Search for a movie'\n                            type='text'\n                            onChange={ this.handleChange }\n                            onFocus={ this.addFocus }\n                            onBlur={ this.removeFocus }/>\n                    </div>\n                    <button className='search__btn icon-search'/>\n                </form>\n                { this.renderSearchMsg() }\n            </div>\n        )\n    }\n}\n\nexport default connect(state => ({\n    query: state.movies.query,\n    lastQuery: state.movies.lastQuery,\n    total_results: state.movies.total_results\n}), {\n    loadMovies,\n    setQuery\n})(SearchForm)\n","import React, { Component } from 'react'\n\nexport default class Stars extends Component {\n    render() {\n        return (\n            <div className='stars'>\n                { this.renderFilledStars() }\n            </div>\n        )\n    }\n\n    renderFilledStars = () => {\n        const stars = []\n\n        for (let i = 0; i < this.props.count; i++) {\n            stars.push(<span className='icon-star-filled'></span>)\n        }\n\n        for (let i = 0; i < 5 - this.props.count; i++) {\n            stars.push(<span className='icon-star'></span>)\n        }\n\n        return stars.map((star, index) => {\n            return <div key = { index } className='stars__item'>{ star }</div>\n        })\n    }\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Stars from './../../components/Stars'\nimport { URL_IMG } from '../../paths'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { loadGenres } from './../../ac'\n\nclass Movie extends Component {\n    static propTypes = {\n        movie: PropTypes.shape({\n            poster_path: PropTypes.string,\n            title: PropTypes.string,\n            genre_ids: PropTypes.array,\n            release_date: PropTypes.string,\n            overview: PropTypes.string,\n            loadGenres: PropTypes.func,\n        }),\n        genres: PropTypes.array\n    }\n\n    render() {\n        const { movie } = this.props\n\n        return (\n            <div className='movie'>\n                <Link to={`/movie-${movie.id}`}\n                    className='movie__img'\n                    style={{ backgroundImage: `url(${this.getImg(movie.poster_path)})` }}>\n                    <img src='static/images/dummy_420x630.jpg' alt='' className='u-dummy'/>\n                </Link>\n                <div>\n                    <Link to={`/movie-${movie.id}`}\n                          className='movie__title t2'>\n                        { movie.title }\n                    </Link>\n                    <div className='movie__prop'>{ this.renderGenres(movie.genre_ids) }</div>\n                    <div className='movie__prop'>{ this.getYear(movie.release_date) }</div>\n                    <div className='movie__evaluate'>\n                        <div className='movie__stars'>\n                            <Stars count={ this.getStarCount(movie.vote_average) }/>\n                        </div>\n                        <div>{ movie.vote_count }</div>\n                    </div>\n                    <div className='movie__desc'>{ movie.overview }</div>\n                    <Link to={`/movie-${movie.id}`}\n                          className='movie__link'>\n                        Read more\n                    </Link>\n                </div>\n            </div>\n        )\n    }\n\n    componentDidMount() {\n        this.props.loadGenres()\n    }\n\n    getYear = date => date.slice(0, 4)\n\n    getImg = img => img ? `${URL_IMG}${img}` : 'static/images/rho_light.jpg'\n\n    getGenres = ids => {\n        const { genres } = this.props\n        const currentGenres = new Set()\n\n        ids.forEach(id => {\n            genres.forEach(genre => {\n                if (genre.id === id) {\n                    currentGenres.add(genre)\n                }\n            })\n        })\n\n        return [...currentGenres]\n    }\n\n    getStarCount = vote => Math.round(vote / 2)\n\n    renderGenres = ids => {\n        return this.getGenres(ids).map((genre, index) => {\n            return <span key={ genre.id }>\n                        { (index ? `, ${genre.name.toLowerCase()}` : genre.name) }\n                    </span>\n        })\n    }\n}\n\n\nexport default connect(null, { loadGenres })(Movie)\n","import React from 'react'\nimport { classes } from './../../constants'\n\nexport default function preloader(props) {\n  let className = 'preloader'\n  if (props.isFixed) className += ` ${classes.IS_FIXED}`\n\n  return (\n      <div className={ className }>\n        <div className='preloader__inner'/>\n      </div>\n  )\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Preloader from './../../components/Preloader'\nimport { connect } from 'react-redux'\nimport { loadNextPage } from './../../ac'\n\n\nclass LoadMore extends Component {\n    static propTypes = {\n        page: PropTypes.number.isRequired,\n        loadNextPage: PropTypes.func.isRequired,\n        loadingMore: PropTypes.bool,\n        mode: PropTypes.string,\n        query: PropTypes.string\n    }\n\n    render() {\n        return (\n            <div className='load-more'>\n                {\n                    this.props.loadingMore\n                        ? <div\n                        className='load-more__preloader'>\n                        <Preloader />\n                    </div>\n                        : <div\n                        onClick={ this.handleClickMore }\n                        className='load-more__link'>\n                        Load more\n                    </div>\n                }\n            </div>\n        )\n    }\n\n    handleClickMore = () => {\n        const { page, mode, query } = this.props\n\n        this.props.loadNextPage(mode, query, page + 1)\n    }\n}\n\nexport default connect(state => ({\n    page: state.movies.page,\n    loadingMore: state.movies.loadingMore,\n    mode: state.movies.mode,\n    query: state.movies.query\n}), {\n    loadNextPage\n})(LoadMore)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport SearchForm from './../SearchForm'\nimport Movie from './../Movie'\nimport LoadMore from './../LoadMore'\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\nimport { connect } from 'react-redux'\nimport { loadMovies } from './../../ac'\n\n\nclass MoviesList extends Component {\n    static propTypes = {\n        movies: PropTypes.array,\n        genres: PropTypes.array,\n        pages: PropTypes.number,\n        page: PropTypes.number,\n        loadMovies: PropTypes.func,\n        loadingMore: PropTypes.bool,\n        mode: PropTypes.string,\n        query: PropTypes.string\n    }\n\n    render() {\n        return (\n            <div>\n                <SearchForm/>\n                <div className='movies-list'>\n                    <TransitionGroup>\n                        { this.renderItems() }\n                    </TransitionGroup>\n                </div>\n                { this.renderLoadMore() }\n            </div>\n        )\n    }\n\n    componentDidMount() {\n        this.props.loadMovies()\n    }\n\n    renderItems = () => {\n        const { movies, genres } = this.props\n\n        return movies.map(movie => {\n            return <CSSTransition\n                key={ movie.id }\n                classNames='fade'\n                timeout={{\n                    appear: 500,\n                    enter: 500,\n                    exit: 500\n                }}\n                appear>\n                <div className='movies-list__item'>\n                    <Movie\n                        movie={ movie }\n                        genres={ genres }/>\n                </div>\n            </CSSTransition>\n        })\n    }\n\n    renderLoadMore = () => {\n        const { pages, page } = this.props\n\n        if (pages > 1 && page !== pages ) return <LoadMore/>\n    }\n}\n\nexport default connect(state => ({\n    movies: state.movies.results,\n    genres: state.genres.genres,\n    pages: state.movies.total_pages,\n    page: state.movies.page,\n    loadingMore: state.movies.loadingMore,\n    mode: state.movies.mode,\n    query: state.movies.query\n}), {\n    loadMovies\n})(MoviesList)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { loadMovie } from './../../ac'\nimport { URL_IMG } from '../../paths'\n\nclass MoviePage extends Component {\n    static propTypes = {\n        id: PropTypes.string.isRequired,\n        loadMovie: PropTypes.func.isRequired,\n        movie: PropTypes.object\n    }\n\n    render() {\n        const { movie } = this.props\n\n        return <div>\n            <h1>{movie.title }</h1>\n            <a href={ movie.homepage } className='u-link'>homepage</a>\n            <p>{ movie.overview }</p>\n            <img src={ this.getImg(movie.poster_path) } alt=\"\"/>\n            { this.renderImages(movie.images) }\n            <div>budget: { movie.budget }</div>\n            {/*<div>genres: { movie.genres }</div>*/}\n            <div>original_language: { movie.original_language }</div>\n            <div>original_title: { movie.original_title }</div>\n            <div>popularity: { movie.popularity }</div>\n            {/*<div>production_companies: { movie.production_companies }</div>*/}\n            {/*<div>production_countries: { movie.production_countries }</div>*/}\n            <div>release_date: { movie.release_date }</div>\n            <div>status: { movie.status }</div>\n            <div>video: { movie.video }</div>\n            <div>vote_average: { movie.vote_average }</div>\n            <div>vote_count: { movie.vote_count }</div>\n        </div>\n    }\n\n    componentDidMount() {\n        this.props.loadMovie(this.props.id)\n    }\n\n    getImg = img => img ? `${URL_IMG}${img}` : 'static/images/rho_light.jpg'\n\n    renderImages = images => {\n        if (images) {\n            return images.backdrops.map(el => {\n                return <div key={el.file_path}>\n                        <img src={ this.getImg(el.file_path) } alt=''/>\n                        </div>\n            })\n        }\n    }\n}\n\nexport default connect(state => ({\n    movie: state.movies.movie\n}), { loadMovie })(MoviePage)\n","import React from 'react'\n\nexport default function footer() {\n    return (\n        <footer className='footer'>\n            <div className='footer__copyright'>\n                © { (new Date()).getFullYear() } Rho\n            </div>\n        </footer>\n    )\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Header from './components/Header'\nimport MoviesList from './components/MoviesList'\nimport MoviePage from './components/MoviePage'\nimport Footer from './components/Footer'\nimport Preloader from './components/Preloader'\nimport { connect } from 'react-redux'\nimport { HashRouter as Router, Route } from 'react-router-dom'\n\nclass App extends Component {\n    static propTypes = {\n        loading: PropTypes.bool\n    }\n\n    render() {\n        return (\n            <Router>\n                <div className='container'>\n                    <div>\n                        <Header/>\n                        <Route exact path='/' component={ MoviesList }/>\n                        <Route path='/movie-:id' render={ this.getMoviePage }/>\n                    </div>\n                    <Footer/>\n                    { this.renderPreloader() }\n                </div>\n            </Router>\n        )\n    }\n\n    getMoviePage = ({ match }) => {\n        const { id } = match.params\n        return <MoviePage  id={ id }/>\n    }\n\n    renderPreloader = () => {\n        if (this.props.loading) return <Preloader isFixed/>\n    }\n}\n\nexport default connect(state => ({\n    loading: state.movies.loading\n}))(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { Map } from 'immutable'\n\nexport function objToMap(obj, DataRecord = Map) {\n    return Object.keys(obj).reduce((acc, key) => acc.set(key, obj[key]), new DataRecord())\n}\n","import { actions } from './../constants'\n// eslint-disable-next-line\nimport { Map, Record } from 'immutable'\nimport { objToMap } from './../helpers'\nimport { modes } from './../constants'\n\nconst ReducerState = Record({\n    results: [],\n    total_pages: 1,\n    page: 1,\n    total_results: 0,\n    loading: false,\n    loadingMore: false,\n    mode: modes.POPULAR,\n    query: '',\n    lastQuery: '',\n    movie: {}\n})\n\nexport default (state = new ReducerState(), action) => {\n    const { type, payload, response } = action\n\n    switch (type) {\n        case actions.LOAD_MOVIES + actions.START:\n            return state.set('loading', true)\n\n        case actions.LOAD_MOVIES + actions.SUCCESS:\n            return objToMap(response, ReducerState)\n                    .set('query', payload.query)\n                    .set('lastQuery', payload.query)\n                    .set('mode', payload.mode)\n                    .set('loading', false)\n\n        case actions.LOAD_NEXT_PAGE + actions.START:\n            return state.set('loadingMore', true)\n\n        case actions.LOAD_NEXT_PAGE + actions.SUCCESS:\n            return state\n                    .set('page', payload.page)\n                    .set('results', [...state.results, ...response.results])\n                    .set('loadingMore', false)\n\n        case actions.SET_QUERY:\n            return state.set('query', payload.query)\n\n        case actions.LOAD_MOVIE + actions.START:\n            return state.set('loading', true)\n\n        case actions.LOAD_MOVIE + actions.SUCCESS:\n            return state\n                    .set('movie', response)\n                    .set('loading', false)\n\n        default:\n            return state\n    }\n}\n","import { actions } from './../constants'\n// eslint-disable-next-line\nimport { Map, Record } from 'immutable'\nimport { objToMap } from './../helpers'\n\nconst GenreRecord = Record({\n    genres: []\n})\n\nexport default (state = new GenreRecord(), action) => {\n    const { type, response } = action\n\n    switch (type) {\n        case actions.LOAD_GENRES + actions.SUCCESS:\n            return objToMap(response, GenreRecord)\n\n        default:\n            return state\n    }\n}\n","import { combineReducers } from 'redux'\nimport movies from './movies'\nimport genres from './genres'\n\nexport default combineReducers({\n    movies,\n    genres\n})\n","import { createStore, applyMiddleware } from 'redux'\nimport reducer from '../reducer'\nimport api from '../middlewares/api'\n\nconst enhancer = applyMiddleware(api)\n\nconst store = createStore(reducer, {}, enhancer)\n\nwindow.store = store\n\nexport default store\n","import { actions } from './../constants'\n\nexport default store => next => action => {\n    const { callAPI, type, ...rest } = action\n    if (!callAPI) return next(action)\n\n    next({\n        ...rest,\n        type: type + actions.START\n    })\n\n    setTimeout(() => {\n        fetch(callAPI)\n            .then(response => response.json())\n            .then(response => next({...rest, type: type + actions.SUCCESS, response}))\n            .catch(err => next({...rest, type: type + actions.ERR, err}))\n    }, 700)\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/styles.sass'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n// eslint-disable-next-line\nimport store from './store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}